{"version":3,"names":[],"mappings":"","sources":["invite.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n(function (window) {\n    require(\"es5-shim/es5-shim\");\n    require(\"es5-shim/es5-sham\");\n    require(\"es6-promise\").polyfill();\n\n    var Backbone = require(\"backbone\");\n    Backbone.$ = require(\"jquery\");\n\n    var Cocktail = require(\"backbone.cocktail\");\n    Cocktail.patch(Backbone);\n\n    var React = require(\"react\");\n    var Router = require(\"routers/InviteRouter\");\n    var Handler = Router.Handler;\n\n    Router.run(function (Handler, state) {\n        var params = state.params;\n        React.render(React.createElement(Handler, {params: params}), document.getElementById(\"app\"));\n    });\n}(window));\n\n\n},{\"backbone\":\"backbone\",\"backbone.cocktail\":\"backbone.cocktail\",\"es5-shim/es5-sham\":5,\"es5-shim/es5-shim\":6,\"es6-promise\":7,\"jquery\":\"jquery\",\"react\":\"react\",\"routers/InviteRouter\":24}],2:[function(require,module,exports){\n// Backbone React Component\n// ========================\n//\n//     Backbone.React.Component v0.8.1\n//\n//     (c) 2014 \"Magalhas\" José Magalhães <magalhas@gmail.com>\n//     Backbone.React.Component can be freely distributed under the MIT license.\n//\n//\n// `Backbone.React.Component` is a mixin that glues [Backbone](http://backbonejs.org/)\n// models and collections into [React](http://facebook.github.io/react/) components.\n//\n// When the component is mounted, a wrapper starts listening to models and\n// collections changes to automatically set your component state and achieve UI\n// binding through reactive updates.\n//\n//\n//\n// Basic Usage\n//\n//     var MyComponent = React.createClass({\n//       mixins: [Backbone.React.Component.mixin],\n//       render: function () {\n//         return <div>{this.state.foo}</div>;\n//       }\n//     });\n//     var model = new Backbone.Model({foo: 'bar'});\n//     React.render(<MyComponent model={model} />, document.body);\n\n(function (root, factory) {\n  // Universal module definition\n  if (typeof define === 'function' && define.amd) {\n    define(['react', 'backbone', 'underscore'], factory);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory(require('react'), require('backbone'), require('underscore'));\n  } else {\n    factory(root.React, root.Backbone, root._);\n  }\n}(this, function (React, Backbone, _) {\n  'use strict';\n  if (!Backbone.React) {\n    Backbone.React = {};\n  }\n  if (!Backbone.React.Component) {\n    Backbone.React.Component = {};\n  }\n  // Mixin used in all component instances. Exported through `Backbone.React.Component.mixin`.\n  var mixin = Backbone.React.Component.mixin = {\n    // Types of the context passed to child components. Only\n    // `hasParentBackboneMixin` is required all of the others are optional.\n    childContextTypes: {\n      hasParentBackboneMixin: React.PropTypes.bool.isRequired,\n      parentModel: React.PropTypes.any,\n      parentCollection: React.PropTypes.any\n    },\n    // Types of the context received from the parent component. All of them are\n    // optional.\n    contextTypes: {\n      hasParentBackboneMixin: React.PropTypes.bool,\n      parentModel: React.PropTypes.any,\n      parentCollection: React.PropTypes.any\n    },\n    // Passes data to our child components.\n    getChildContext: function () {\n      return {\n        hasParentBackboneMixin: true,\n        parentModel: this.getModel(),\n        parentCollection: this.getCollection()\n      };\n    },\n    // Sets `this.el` and `this.$el` when the component mounts.\n    componentDidMount: function () {\n      this.setElement(React.findDOMNode(this));\n    },\n    // Sets `this.el` and `this.$el` when the component updates.\n    componentDidUpdate: function () {\n      this.setElement(React.findDOMNode(this));\n    },\n    // When the component gets the initial state, instance a `Wrapper` to take\n    // care of models and collections binding with `this.state`.\n    getInitialState: function () {\n      var initialState = {};\n\n      if (!this.wrapper) {\n        this.wrapper = new Wrapper(this, initialState);\n      }\n\n      return initialState;\n    },\n    // When the component mounts, instance a `Wrapper` to take care\n    // of models and collections binding with `this.state`.\n    componentWillMount: function () {\n      if (!this.wrapper) {\n        this.wrapper = new Wrapper(this);\n      }\n    },\n    // When the component unmounts, dispose listeners and delete\n    // `this.wrapper` reference.\n    componentWillUnmount: function () {\n      if (this.wrapper) {\n        this.wrapper.stopListening();\n        delete this.wrapper;\n      }\n    },\n    // In order to allow passing nested models and collections as reference we\n    // filter `nextProps.model` and `nextProps.collection`.\n    componentWillReceiveProps: function (nextProps) {\n      var model = nextProps.model;\n      var collection = nextProps.collection;\n\n      if (this.wrapper.model && model) {\n        if (this.wrapper.model !== model) {\n          this.wrapper.stopListening();\n          this.wrapper = new Wrapper(this, void 0, nextProps);\n        }\n      } else if (model) {\n        this.wrapper = new Wrapper(this, void 0, nextProps);\n      }\n\n      if (this.wrapper.collection && collection) {\n        if (this.wrapper.collection !== collection) {\n          this.wrapper.stopListening();\n          this.wrapper = new Wrapper(this, void 0, nextProps);\n        }\n      } else if (collection) {\n        this.wrapper = new Wrapper(this, void 0, nextProps);\n      }\n    },\n    // Shortcut to `@$el.find` if jQuery ins present, else if fallbacks to DOM\n    // native `querySelector`. Inspired by `Backbone.View`.\n    $: function () {\n      var els;\n\n      if (this.$el) {\n        els = this.$el.find.apply(this.$el, arguments);\n      } else {\n        var el = React.findDOMNode(this);\n        els = el.querySelector.apply(el, arguments);\n      }\n\n      return els;\n    },\n    // Grabs the collection from `@wrapper.collection` or `@context.parentCollection`\n    getCollection: function () {\n      return this.wrapper.collection || this.context.parentCollection;\n    },\n    // Grabs the model from `@wrapper.model` or `@context.parentModel`\n    getModel: function () {\n      return this.wrapper.model || this.context.parentModel;\n    },\n    // Sets a DOM element to render/mount this component on this.el and this.$el.\n    setElement: function (el) {\n      if (el && Backbone.$ && el instanceof Backbone.$) {\n        if (el.length > 1) {\n          throw new Error('You can only assign one element to a component');\n        }\n        this.el = el[0];\n        this.$el = el;\n      } else if (el) {\n        this.el = el;\n        if (Backbone.$) {\n          this.$el = Backbone.$(el);\n        }\n      }\n      return this;\n    }\n  };\n  // Binds models and collections to a `React.Component`. It mixes `Backbone.Events`.\n  function Wrapper (component, initialState, nextProps) {\n    // Object to store wrapper state (not the component state)\n    this.state = {};\n    // 1:1 relation with the `component`\n    this.component = component;\n    // Use `nextProps` or `component.props` and grab `model` and `collection`\n    // from there\n    var props = nextProps || component.props || {};\n    var model, collection;\n\n    if (component.overrideModel && typeof component.overrideModel === 'function'){\n      // Define overrideModel() method on your `React class` to programatically supply a model object\n      // Will override `this.props.model`\n      model = component.overrideModel();\n    } else {\n      model = props.model;\n    }\n\n    if (component.overrideCollection && typeof component.overrideCollection === 'function'){\n      // Define overrideCollection() method on your `React class` to programatically supply a collection object\n      // Will override `this.props.collection`\n      collection = component.overrideCollection();\n    } else {\n      collection = props.collection;\n    }\n\n    this.setModels(model, initialState);\n    this.setCollections(collection, initialState);\n  }\n  // Mixing `Backbone.Events` into `Wrapper.prototype`\n  _.extend(Wrapper.prototype, Backbone.Events, {\n    // Sets `this.state` when a model/collection request results in error. It delegates\n    // to `this.setState`. It listens to `Backbone.Model#error` and `Backbone.Collection#error`.\n    onError: function (modelOrCollection, res, options) {\n      // Set state only if there's no silent option\n      if (!options.silent) {\n        this.component.setState({\n          isRequesting: false,\n          hasError: true,\n          error: res\n        });\n      }\n    },\n    onInvalid: function (model, res, options) {\n      if (!options.silent) {\n        this.component.setState({\n          isInvalid: true\n        });\n      }\n    },\n    // Sets `this.state` when a model/collection request starts. It delegates to\n    // `this.setState`. It listens to `Backbone.Model#request` and\n    // `Backbone.Collection#request`.\n    onRequest: function (modelOrCollection, xhr, options) {\n      // Set `state` only if there's no silent option\n      if (!options.silent) {\n        this.component.setState({\n          isRequesting: true,\n          hasError: false,\n          isInvalid: false\n        });\n      }\n    },\n    // Sets `this.state` when a model/collection syncs. It delegates to `this.setState`.\n    // It listens to `Backbone.Model#sync` and `Backbone.Collection#sync`\n    onSync: function (modelOrCollection, res, options) {\n      // Calls `setState` only if there's no silent option\n      if (!options.silent) {\n        this.component.setState({isRequesting: false});\n      }\n    },\n    // Check if `models` is a `Backbone.Model` or an hashmap of them, sets them\n    // to the component state and binds to update on any future changes\n    setModels: function (models, initialState, isDeferred) {\n      if (typeof models !== 'undefined' && (models.attributes ||\n          typeof models === 'object' && _.values(models)[0].attributes)) {\n        // The model(s) bound to this component\n        this.model = models;\n        // Set model(s) attributes on `initialState` for the first render\n        this.setStateBackbone(models, void 0, initialState, isDeferred);\n        this.startModelListeners(models);\n      }\n    },\n    // Check if `collections` is a `Backbone.Model` or an hashmap of them,\n    // sets them to the component state and binds to update on any future changes\n    setCollections: function (collections, initialState, isDeferred) {\n      if (typeof collections !== 'undefined' && (collections.models ||\n          typeof collections === 'object' && _.values(collections)[0].models)) {\n        // The collection(s) bound to this component\n        this.collection = collections;\n        // Set collection(s) models on `initialState` for the first render\n        this.setStateBackbone(collections, void 0, initialState, isDeferred);\n        this.startCollectionListeners(collections);\n      }\n    },\n    // Used internally to set `this.collection` or `this.model` on `this.state`. Delegates to\n    // `this.setState`. It listens to `Backbone.Collection` events such as `add`, `remove`,\n    // `change`, `sort`, `reset` and to `Backbone.Model` `change`.\n    setStateBackbone: function (modelOrCollection, key, target, isDeferred) {\n      if (!(modelOrCollection.models || modelOrCollection.attributes)) {\n        for (key in modelOrCollection)\n            this.setStateBackbone(modelOrCollection[key], key, target);\n        return;\n      }\n      this.setState.apply(this, arguments);\n    },\n    // Sets a model, collection or object into state by delegating to `this.component.setState`.\n    setState: function (modelOrCollection, key, target, isDeferred) {\n      var state = {};\n      var newState = modelOrCollection.toJSON ? modelOrCollection.toJSON() : modelOrCollection;\n\n      if (key) {\n        state[key] = newState;\n      } else if (modelOrCollection.models) {\n        state.collection = newState;\n      } else {\n        state.model = newState;\n      }\n\n      if (target) {\n        _.extend(target, state);\n      } else if (isDeferred) {\n        this.nextState = _.extend(this.nextState || {}, state);\n        _.defer(_.bind(function () {\n          if (this.nextState) {\n            this.component.setState(this.nextState);\n            this.nextState = null;\n          }\n        }, this));\n      } else {\n        this.component.setState(state);\n      }\n    },\n    // Binds the component to any collection changes.\n    startCollectionListeners: function (collection, key) {\n      if (!collection) collection = this.collection;\n      if (collection) {\n        if (collection.models)\n          this\n            .listenTo(collection, 'add remove change sort reset',\n              _.partial(this.setStateBackbone, collection, key, void 0, true))\n            .listenTo(collection, 'error', this.onError)\n            .listenTo(collection, 'request', this.onRequest)\n            .listenTo(collection, 'sync', this.onSync);\n        else if (typeof collection === 'object')\n          for (key in collection)\n            if (collection.hasOwnProperty(key))\n              this.startCollectionListeners(collection[key], key);\n      }\n    },\n    // Binds the component to any model changes.\n    startModelListeners: function (model, key) {\n      if (!model) model = this.model;\n      if (model) {\n        if (model.attributes)\n          this\n            .listenTo(model, 'change',\n              _.partial(this.setStateBackbone, model, key, void 0, true))\n            .listenTo(model, 'error', this.onError)\n            .listenTo(model, 'request', this.onRequest)\n            .listenTo(model, 'sync', this.onSync)\n            .listenTo(model, 'invalid', this.onInvalid);\n        else if (typeof model === 'object')\n          for (key in model)\n            this.startModelListeners(model[key], key);\n      }\n    }\n  });\n\n  // Expose `Backbone.React.Component.mixin`.\n  return mixin;\n}));\n// <a href=\"https://github.com/magalhas/backbone-react-component\"><img style=\"position: absolute; top: 0; right: 0; border: 0;\" src=\"https://github-camo.global.ssl.fastly.net/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\"></a>\n\n},{\"backbone\":\"backbone\",\"react\":\"react\",\"underscore\":\"underscore\"}],3:[function(require,module,exports){\n// Backbone.Validation v0.11.5\n//\n// Copyright (c) 2011-2015 Thomas Pedersen\n// Distributed under MIT License\n//\n// Documentation and full license available at:\n// http://thedersen.com/projects/backbone-validation\n(function (factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory(require('backbone'), require('underscore'));\n  } else if (typeof define === 'function' && define.amd) {\n    define(['backbone', 'underscore'], factory);\n  }\n}(function (Backbone, _) {\n  Backbone.Validation = (function(_){\n    'use strict';\n  \n    // Default options\n    // ---------------\n  \n    var defaultOptions = {\n      forceUpdate: false,\n      selector: 'name',\n      labelFormatter: 'sentenceCase',\n      valid: Function.prototype,\n      invalid: Function.prototype\n    };\n  \n  \n    // Helper functions\n    // ----------------\n  \n    // Formatting functions used for formatting error messages\n    var formatFunctions = {\n      // Uses the configured label formatter to format the attribute name\n      // to make it more readable for the user\n      formatLabel: function(attrName, model) {\n        return defaultLabelFormatters[defaultOptions.labelFormatter](attrName, model);\n      },\n  \n      // Replaces nummeric placeholders like {0} in a string with arguments\n      // passed to the function\n      format: function() {\n        var args = Array.prototype.slice.call(arguments),\n            text = args.shift();\n        return text.replace(/\\{(\\d+)\\}/g, function(match, number) {\n          return typeof args[number] !== 'undefined' ? args[number] : match;\n        });\n      }\n    };\n  \n    // Flattens an object\n    // eg:\n    //\n    //     var o = {\n    //       owner: {\n    //         name: 'Backbone',\n    //         address: {\n    //           street: 'Street',\n    //           zip: 1234\n    //         }\n    //       }\n    //     };\n    //\n    // becomes:\n    //\n    //     var o = {\n    //       'owner': {\n    //         name: 'Backbone',\n    //         address: {\n    //           street: 'Street',\n    //           zip: 1234\n    //         }\n    //       },\n    //       'owner.name': 'Backbone',\n    //       'owner.address': {\n    //         street: 'Street',\n    //         zip: 1234\n    //       },\n    //       'owner.address.street': 'Street',\n    //       'owner.address.zip': 1234\n    //     };\n    // This may seem redundant, but it allows for maximum flexibility\n    // in validation rules.\n    var flatten = function (obj, into, prefix) {\n      into = into || {};\n      prefix = prefix || '';\n  \n      _.each(obj, function(val, key) {\n        if(obj.hasOwnProperty(key)) {\n          if (!!val && _.isArray(val)) {\n            _.forEach(val, function(v, k) {\n              flatten(v, into, prefix + key + '.' + k + '.');\n              into[prefix + key + '.' + k] = v;\n            });\n          } else if (!!val && typeof val === 'object' && val.constructor === Object) {\n            flatten(val, into, prefix + key + '.');\n          }\n  \n          // Register the current level object as well\n          into[prefix + key] = val;\n        }\n      });\n  \n      return into;\n    };\n  \n    // Validation\n    // ----------\n  \n    var Validation = (function(){\n  \n      // Returns an object with undefined properties for all\n      // attributes on the model that has defined one or more\n      // validation rules.\n      var getValidatedAttrs = function(model, attrs) {\n        attrs = attrs || _.keys(_.result(model, 'validation') || {});\n        return _.reduce(attrs, function(memo, key) {\n          memo[key] = void 0;\n          return memo;\n        }, {});\n      };\n  \n      // Returns an array with attributes passed through options\n      var getOptionsAttrs = function(options, view) {\n        var attrs = options.attributes;\n        if (_.isFunction(attrs)) {\n          attrs = attrs(view);\n        } else if (_.isString(attrs) && (_.isFunction(defaultAttributeLoaders[attrs]))) {\n          attrs = defaultAttributeLoaders[attrs](view);\n        }\n        if (_.isArray(attrs)) {\n          return attrs;\n        }\n      };\n  \n  \n      // Looks on the model for validations for a specified\n      // attribute. Returns an array of any validators defined,\n      // or an empty array if none is defined.\n      var getValidators = function(model, attr) {\n        var attrValidationSet = model.validation ? _.result(model, 'validation')[attr] || {} : {};\n  \n        // If the validator is a function or a string, wrap it in a function validator\n        if (_.isFunction(attrValidationSet) || _.isString(attrValidationSet)) {\n          attrValidationSet = {\n            fn: attrValidationSet\n          };\n        }\n  \n        // Stick the validator object into an array\n        if(!_.isArray(attrValidationSet)) {\n          attrValidationSet = [attrValidationSet];\n        }\n  \n        // Reduces the array of validators into a new array with objects\n        // with a validation method to call, the value to validate against\n        // and the specified error message, if any\n        return _.reduce(attrValidationSet, function(memo, attrValidation) {\n          _.each(_.without(_.keys(attrValidation), 'msg'), function(validator) {\n            memo.push({\n              fn: defaultValidators[validator],\n              val: attrValidation[validator],\n              msg: attrValidation.msg\n            });\n          });\n          return memo;\n        }, []);\n      };\n  \n      // Validates an attribute against all validators defined\n      // for that attribute. If one or more errors are found,\n      // the first error message is returned.\n      // If the attribute is valid, an empty string is returned.\n      var validateAttr = function(model, attr, value, computed) {\n        // Reduces the array of validators to an error message by\n        // applying all the validators and returning the first error\n        // message, if any.\n        return _.reduce(getValidators(model, attr), function(memo, validator){\n          // Pass the format functions plus the default\n          // validators as the context to the validator\n          var ctx = _.extend({}, formatFunctions, defaultValidators),\n              result = validator.fn.call(ctx, value, attr, validator.val, model, computed);\n  \n          if(result === false || memo === false) {\n            return false;\n          }\n          if (result && !memo) {\n            return _.result(validator, 'msg') || result;\n          }\n          return memo;\n        }, '');\n      };\n  \n      // Loops through the model's attributes and validates the specified attrs.\n      // Returns and object containing names of invalid attributes\n      // as well as error messages.\n      var validateModel = function(model, attrs, validatedAttrs) {\n        var error,\n            invalidAttrs = {},\n            isValid = true,\n            computed = _.clone(attrs);\n  \n        _.each(validatedAttrs, function(val, attr) {\n          error = validateAttr(model, attr, val, computed);\n          if (error) {\n            invalidAttrs[attr] = error;\n            isValid = false;\n          }\n        });\n  \n        return {\n          invalidAttrs: invalidAttrs,\n          isValid: isValid\n        };\n      };\n  \n      // Contains the methods that are mixed in on the model when binding\n      var mixin = function(view, options) {\n        return {\n  \n          // Check whether or not a value, or a hash of values\n          // passes validation without updating the model\n          preValidate: function(attr, value) {\n            var self = this,\n                result = {},\n                error;\n  \n            if(_.isObject(attr)){\n              _.each(attr, function(value, key) {\n                error = self.preValidate(key, value);\n                if(error){\n                  result[key] = error;\n                }\n              });\n  \n              return _.isEmpty(result) ? undefined : result;\n            }\n            else {\n              return validateAttr(this, attr, value, _.extend({}, this.attributes));\n            }\n          },\n  \n          // Check to see if an attribute, an array of attributes or the\n          // entire model is valid. Passing true will force a validation\n          // of the model.\n          isValid: function(option) {\n            var flattened, attrs, error, invalidAttrs;\n  \n            option = option || getOptionsAttrs(options, view);\n  \n            if(_.isString(option)){\n              attrs = [option];\n            } else if(_.isArray(option)) {\n              attrs = option;\n            }\n            if (attrs) {\n              flattened = flatten(this.attributes);\n              //Loop through all associated views\n              _.each(this.associatedViews, function(view) {\n                _.each(attrs, function (attr) {\n                  error = validateAttr(this, attr, flattened[attr], _.extend({}, this.attributes));\n                  if (error) {\n                    options.invalid(view, attr, error, options.selector);\n                    invalidAttrs = invalidAttrs || {};\n                    invalidAttrs[attr] = error;\n                  } else {\n                    options.valid(view, attr, options.selector);\n                  }\n                }, this);\n              }, this);\n            }\n  \n            if(option === true) {\n              invalidAttrs = this.validate();\n            }\n            if (invalidAttrs) {\n              this.trigger('invalid', this, invalidAttrs, {validationError: invalidAttrs});\n            }\n            return attrs ? !invalidAttrs : this.validation ? this._isValid : true;\n          },\n  \n          // This is called by Backbone when it needs to perform validation.\n          // You can call it manually without any parameters to validate the\n          // entire model.\n          validate: function(attrs, setOptions){\n            var model = this,\n                validateAll = !attrs,\n                opt = _.extend({}, options, setOptions),\n                validatedAttrs = getValidatedAttrs(model, getOptionsAttrs(options, view)),\n                allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs),\n                flattened = flatten(allAttrs),\n                changedAttrs = attrs ? flatten(attrs) : flattened,\n                result = validateModel(model, allAttrs, _.pick(flattened, _.keys(validatedAttrs)));\n  \n            model._isValid = result.isValid;\n  \n            //After validation is performed, loop through all associated views\n            _.each(model.associatedViews, function(view){\n  \n              // After validation is performed, loop through all validated and changed attributes\n              // and call the valid and invalid callbacks so the view is updated.\n              _.each(validatedAttrs, function(val, attr){\n                  var invalid = result.invalidAttrs.hasOwnProperty(attr),\n                    changed = changedAttrs.hasOwnProperty(attr);\n  \n                  if(!invalid){\n                    opt.valid(view, attr, opt.selector);\n                  }\n                  if(invalid && (changed || validateAll)){\n                    opt.invalid(view, attr, result.invalidAttrs[attr], opt.selector);\n                  }\n              });\n            });\n  \n            // Trigger validated events.\n            // Need to defer this so the model is actually updated before\n            // the event is triggered.\n            _.defer(function() {\n              model.trigger('validated', model._isValid, model, result.invalidAttrs);\n              model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\n            });\n  \n            // Return any error messages to Backbone, unless the forceUpdate flag is set.\n            // Then we do not return anything and fools Backbone to believe the validation was\n            // a success. That way Backbone will update the model regardless.\n            if (!opt.forceUpdate && _.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0) {\n              return result.invalidAttrs;\n            }\n          }\n        };\n      };\n  \n      // Helper to mix in validation on a model. Stores the view in the associated views array.\n      var bindModel = function(view, model, options) {\n        if (model.associatedViews) {\n          model.associatedViews.push(view);\n        } else {\n          model.associatedViews = [view];\n        }\n        _.extend(model, mixin(view, options));\n      };\n  \n      // Removes view from associated views of the model or the methods\n      // added to a model if no view or single view provided\n      var unbindModel = function(model, view) {\n        if (view && model.associatedViews && model.associatedViews.length > 1){\n          model.associatedViews = _.without(model.associatedViews, view);\n        } else {\n          delete model.validate;\n          delete model.preValidate;\n          delete model.isValid;\n          delete model.associatedViews;\n        }\n      };\n  \n      // Mix in validation on a model whenever a model is\n      // added to a collection\n      var collectionAdd = function(model) {\n        bindModel(this.view, model, this.options);\n      };\n  \n      // Remove validation from a model whenever a model is\n      // removed from a collection\n      var collectionRemove = function(model) {\n        unbindModel(model);\n      };\n  \n      // Returns the public methods on Backbone.Validation\n      return {\n  \n        // Current version of the library\n        version: '0.11.3',\n  \n        // Called to configure the default options\n        configure: function(options) {\n          _.extend(defaultOptions, options);\n        },\n  \n        // Hooks up validation on a view with a model\n        // or collection\n        bind: function(view, options) {\n          options = _.extend({}, defaultOptions, defaultCallbacks, options);\n  \n          var model = options.model || view.model,\n              collection = options.collection || view.collection;\n  \n          if(typeof model === 'undefined' && typeof collection === 'undefined'){\n            throw 'Before you execute the binding your view must have a model or a collection.\\n' +\n                  'See http://thedersen.com/projects/backbone-validation/#using-form-model-validation for more information.';\n          }\n  \n          if(model) {\n            bindModel(view, model, options);\n          }\n          else if(collection) {\n            collection.each(function(model){\n              bindModel(view, model, options);\n            });\n            collection.bind('add', collectionAdd, {view: view, options: options});\n            collection.bind('remove', collectionRemove);\n          }\n        },\n  \n        // Removes validation from a view with a model\n        // or collection\n        unbind: function(view, options) {\n          options = _.extend({}, options);\n          var model = options.model || view.model,\n              collection = options.collection || view.collection;\n  \n          if(model) {\n            unbindModel(model, view);\n          }\n          else if(collection) {\n            collection.each(function(model){\n              unbindModel(model, view);\n            });\n            collection.unbind('add', collectionAdd);\n            collection.unbind('remove', collectionRemove);\n          }\n        },\n  \n        // Used to extend the Backbone.Model.prototype\n        // with validation\n        mixin: mixin(null, defaultOptions)\n      };\n    }());\n  \n  \n    // Callbacks\n    // ---------\n  \n    var defaultCallbacks = Validation.callbacks = {\n  \n      // Gets called when a previously invalid field in the\n      // view becomes valid. Removes any error message.\n      // Should be overridden with custom functionality.\n      valid: function(view, attr, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]')\n            .removeClass('invalid')\n            .removeAttr('data-error');\n      },\n  \n      // Gets called when a field in the view becomes invalid.\n      // Adds a error message.\n      // Should be overridden with custom functionality.\n      invalid: function(view, attr, error, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]')\n            .addClass('invalid')\n            .attr('data-error', error);\n      }\n    };\n  \n  \n    // Patterns\n    // --------\n  \n    var defaultPatterns = Validation.patterns = {\n      // Matches any digit(s) (i.e. 0-9)\n      digits: /^\\d+$/,\n  \n      // Matches any number (e.g. 100.000)\n      number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n  \n      // Matches a valid email address (e.g. mail@example.com)\n      email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n  \n      // Mathes any valid url (e.g. http://www.xample.com)\n      url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n    };\n  \n  \n    // Error messages\n    // --------------\n  \n    // Error message for the build in validators.\n    // {x} gets swapped out with arguments form the validator.\n    var defaultMessages = Validation.messages = {\n      required: '{0} is required',\n      acceptance: '{0} must be accepted',\n      min: '{0} must be greater than or equal to {1}',\n      max: '{0} must be less than or equal to {1}',\n      range: '{0} must be between {1} and {2}',\n      length: '{0} must be {1} characters',\n      minLength: '{0} must be at least {1} characters',\n      maxLength: '{0} must be at most {1} characters',\n      rangeLength: '{0} must be between {1} and {2} characters',\n      oneOf: '{0} must be one of: {1}',\n      equalTo: '{0} must be the same as {1}',\n      digits: '{0} must only contain digits',\n      number: '{0} must be a number',\n      email: '{0} must be a valid email',\n      url: '{0} must be a valid url',\n      inlinePattern: '{0} is invalid'\n    };\n  \n    // Label formatters\n    // ----------------\n  \n    // Label formatters are used to convert the attribute name\n    // to a more human friendly label when using the built in\n    // error messages.\n    // Configure which one to use with a call to\n    //\n    //     Backbone.Validation.configure({\n    //       labelFormatter: 'label'\n    //     });\n    var defaultLabelFormatters = Validation.labelFormatters = {\n  \n      // Returns the attribute name with applying any formatting\n      none: function(attrName) {\n        return attrName;\n      },\n  \n      // Converts attributeName or attribute_name to Attribute name\n      sentenceCase: function(attrName) {\n        return attrName.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(match, index) {\n          return index === 0 ? match.toUpperCase() : ' ' + match.toLowerCase();\n        }).replace(/_/g, ' ');\n      },\n  \n      // Looks for a label configured on the model and returns it\n      //\n      //      var Model = Backbone.Model.extend({\n      //        validation: {\n      //          someAttribute: {\n      //            required: true\n      //          }\n      //        },\n      //\n      //        labels: {\n      //          someAttribute: 'Custom label'\n      //        }\n      //      });\n      label: function(attrName, model) {\n        return (model.labels && model.labels[attrName]) || defaultLabelFormatters.sentenceCase(attrName, model);\n      }\n    };\n  \n    // AttributeLoaders\n  \n    var defaultAttributeLoaders = Validation.attributeLoaders = {\n      inputNames: function (view) {\n        var attrs = [];\n        if (view) {\n          view.$('form [name]').each(function () {\n            if (/^(?:input|select|textarea)$/i.test(this.nodeName) && this.name &&\n              this.type !== 'submit' && attrs.indexOf(this.name) === -1) {\n              attrs.push(this.name);\n            }\n          });\n        }\n        return attrs;\n      }\n    };\n  \n  \n    // Built in validators\n    // -------------------\n  \n    var defaultValidators = Validation.validators = (function(){\n      // Use native trim when defined\n      var trim = String.prototype.trim ?\n        function(text) {\n          return text === null ? '' : String.prototype.trim.call(text);\n        } :\n        function(text) {\n          var trimLeft = /^\\s+/,\n              trimRight = /\\s+$/;\n  \n          return text === null ? '' : text.toString().replace(trimLeft, '').replace(trimRight, '');\n        };\n  \n      // Determines whether or not a value is a number\n      var isNumber = function(value){\n        return _.isNumber(value) || (_.isString(value) && value.match(defaultPatterns.number));\n      };\n  \n      // Determines whether or not a value is empty\n      var hasValue = function(value) {\n        return !(_.isNull(value) || _.isUndefined(value) || (_.isString(value) && trim(value) === '') || (_.isArray(value) && _.isEmpty(value)));\n      };\n  \n      return {\n        // Function validator\n        // Lets you implement a custom function used for validation\n        fn: function(value, attr, fn, model, computed) {\n          if(_.isString(fn)){\n            fn = model[fn];\n          }\n          return fn.call(model, value, attr, computed);\n        },\n  \n        // Required validator\n        // Validates if the attribute is required or not\n        // This can be specified as either a boolean value or a function that returns a boolean value\n        required: function(value, attr, required, model, computed) {\n          var isRequired = _.isFunction(required) ? required.call(model, value, attr, computed) : required;\n          if(!isRequired && !hasValue(value)) {\n            return false; // overrides all other validators\n          }\n          if (isRequired && !hasValue(value)) {\n            return this.format(defaultMessages.required, this.formatLabel(attr, model));\n          }\n        },\n  \n        // Acceptance validator\n        // Validates that something has to be accepted, e.g. terms of use\n        // `true` or 'true' are valid\n        acceptance: function(value, attr, accept, model) {\n          if(value !== 'true' && (!_.isBoolean(value) || value === false)) {\n            return this.format(defaultMessages.acceptance, this.formatLabel(attr, model));\n          }\n        },\n  \n        // Min validator\n        // Validates that the value has to be a number and equal to or greater than\n        // the min value specified\n        min: function(value, attr, minValue, model) {\n          if (!isNumber(value) || value < minValue) {\n            return this.format(defaultMessages.min, this.formatLabel(attr, model), minValue);\n          }\n        },\n  \n        // Max validator\n        // Validates that the value has to be a number and equal to or less than\n        // the max value specified\n        max: function(value, attr, maxValue, model) {\n          if (!isNumber(value) || value > maxValue) {\n            return this.format(defaultMessages.max, this.formatLabel(attr, model), maxValue);\n          }\n        },\n  \n        // Range validator\n        // Validates that the value has to be a number and equal to or between\n        // the two numbers specified\n        range: function(value, attr, range, model) {\n          if(!isNumber(value) || value < range[0] || value > range[1]) {\n            return this.format(defaultMessages.range, this.formatLabel(attr, model), range[0], range[1]);\n          }\n        },\n  \n        // Length validator\n        // Validates that the value has to be a string with length equal to\n        // the length value specified\n        length: function(value, attr, length, model) {\n          if (!_.isString(value) || value.length !== length) {\n            return this.format(defaultMessages.length, this.formatLabel(attr, model), length);\n          }\n        },\n  \n        // Min length validator\n        // Validates that the value has to be a string with length equal to or greater than\n        // the min length value specified\n        minLength: function(value, attr, minLength, model) {\n          if (!_.isString(value) || value.length < minLength) {\n            return this.format(defaultMessages.minLength, this.formatLabel(attr, model), minLength);\n          }\n        },\n  \n        // Max length validator\n        // Validates that the value has to be a string with length equal to or less than\n        // the max length value specified\n        maxLength: function(value, attr, maxLength, model) {\n          if (!_.isString(value) || value.length > maxLength) {\n            return this.format(defaultMessages.maxLength, this.formatLabel(attr, model), maxLength);\n          }\n        },\n  \n        // Range length validator\n        // Validates that the value has to be a string and equal to or between\n        // the two numbers specified\n        rangeLength: function(value, attr, range, model) {\n          if (!_.isString(value) || value.length < range[0] || value.length > range[1]) {\n            return this.format(defaultMessages.rangeLength, this.formatLabel(attr, model), range[0], range[1]);\n          }\n        },\n  \n        // One of validator\n        // Validates that the value has to be equal to one of the elements in\n        // the specified array. Case sensitive matching\n        oneOf: function(value, attr, values, model) {\n          if(!_.include(values, value)){\n            return this.format(defaultMessages.oneOf, this.formatLabel(attr, model), values.join(', '));\n          }\n        },\n  \n        // Equal to validator\n        // Validates that the value has to be equal to the value of the attribute\n        // with the name specified\n        equalTo: function(value, attr, equalTo, model, computed) {\n          if(value !== computed[equalTo]) {\n            return this.format(defaultMessages.equalTo, this.formatLabel(attr, model), this.formatLabel(equalTo, model));\n          }\n        },\n  \n        // Pattern validator\n        // Validates that the value has to match the pattern specified.\n        // Can be a regular expression or the name of one of the built in patterns\n        pattern: function(value, attr, pattern, model) {\n          if (!hasValue(value) || !value.toString().match(defaultPatterns[pattern] || pattern)) {\n            return this.format(defaultMessages[pattern] || defaultMessages.inlinePattern, this.formatLabel(attr, model), pattern);\n          }\n        }\n      };\n    }());\n  \n    // Set the correct context for all validators\n    // when used from within a method validator\n    _.each(defaultValidators, function(validator, key){\n      defaultValidators[key] = _.bind(defaultValidators[key], _.extend({}, formatFunctions, defaultValidators));\n    });\n  \n    return Validation;\n  }(_));\n  return Backbone.Validation;\n}));\n},{\"backbone\":\"backbone\",\"underscore\":\"underscore\"}],4:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],5:[function(require,module,exports){\n/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2015 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n;\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n    'use strict';\n\n    /* global define, exports, module */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory();\n  }\n}(this, function () {\n\nvar call = Function.prototype.call;\nvar prototypeOfObject = Object.prototype;\nvar owns = call.bind(prototypeOfObject.hasOwnProperty);\n\n// If JS engine supports accessors creating shortcuts.\nvar defineGetter;\nvar defineSetter;\nvar lookupGetter;\nvar lookupSetter;\nvar supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\nif (supportsAccessors) {\n    /* eslint-disable no-underscore-dangle */\n    defineGetter = call.bind(prototypeOfObject.__defineGetter__);\n    defineSetter = call.bind(prototypeOfObject.__defineSetter__);\n    lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\n    lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\n    /* eslint-enable no-underscore-dangle */\n}\n\n// ES5 15.2.3.2\n// http://es5.github.com/#x15.2.3.2\nif (!Object.getPrototypeOf) {\n    // https://github.com/es-shims/es5-shim/issues#issue/2\n    // http://ejohn.org/blog/objectgetprototypeof/\n    // recommended by fschaefer on github\n    //\n    // sure, and webreflection says ^_^\n    // ... this will nerever possibly return null\n    // ... Opera Mini breaks here with infinite loops\n    Object.getPrototypeOf = function getPrototypeOf(object) {\n        /* eslint-disable no-proto */\n        var proto = object.__proto__;\n        /* eslint-enable no-proto */\n        if (proto || proto === null) {\n            return proto;\n        } else if (object.constructor) {\n            return object.constructor.prototype;\n        } else {\n            return prototypeOfObject;\n        }\n    };\n}\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nvar doesGetOwnPropertyDescriptorWork = function doesGetOwnPropertyDescriptorWork(object) {\n    try {\n        object.sentinel = 0;\n        return Object.getOwnPropertyDescriptor(object, 'sentinel').value === 0;\n    } catch (exception) {\n        return false;\n    }\n};\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\nif (Object.defineProperty) {\n    var getOwnPropertyDescriptorWorksOnObject = doesGetOwnPropertyDescriptorWork({});\n    var getOwnPropertyDescriptorWorksOnDom = typeof document === 'undefined' ||\n    doesGetOwnPropertyDescriptorWork(document.createElement('div'));\n    if (!getOwnPropertyDescriptorWorksOnDom || !getOwnPropertyDescriptorWorksOnObject) {\n        var getOwnPropertyDescriptorFallback = Object.getOwnPropertyDescriptor;\n    }\n}\n\nif (!Object.getOwnPropertyDescriptor || getOwnPropertyDescriptorFallback) {\n    var ERR_NON_OBJECT = 'Object.getOwnPropertyDescriptor called on a non-object: ';\n\n    /* eslint-disable no-proto */\n    Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n        if ((typeof object !== 'object' && typeof object !== 'function') || object === null) {\n            throw new TypeError(ERR_NON_OBJECT + object);\n        }\n\n        // make a valiant attempt to use the real getOwnPropertyDescriptor\n        // for I8's DOM elements.\n        if (getOwnPropertyDescriptorFallback) {\n            try {\n                return getOwnPropertyDescriptorFallback.call(Object, object, property);\n            } catch (exception) {\n                // try the shim if the real one doesn't work\n            }\n        }\n\n        var descriptor;\n\n        // If object does not owns property return undefined immediately.\n        if (!owns(object, property)) {\n            return descriptor;\n        }\n\n        // If object has a property then it's for sure both `enumerable` and\n        // `configurable`.\n        descriptor = { enumerable: true, configurable: true };\n\n        // If JS engine supports accessor properties then property may be a\n        // getter or setter.\n        if (supportsAccessors) {\n            // Unfortunately `__lookupGetter__` will return a getter even\n            // if object has own non getter property along with a same named\n            // inherited getter. To avoid misbehavior we temporary remove\n            // `__proto__` so that `__lookupGetter__` will return getter only\n            // if it's owned by an object.\n            var prototype = object.__proto__;\n            var notPrototypeOfObject = object !== prototypeOfObject;\n            // avoid recursion problem, breaking in Opera Mini when\n            // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n            // or any other Object.prototype accessor\n            if (notPrototypeOfObject) {\n                object.__proto__ = prototypeOfObject;\n            }\n\n            var getter = lookupGetter(object, property);\n            var setter = lookupSetter(object, property);\n\n            if (notPrototypeOfObject) {\n                // Once we have getter and setter we can put values back.\n                object.__proto__ = prototype;\n            }\n\n            if (getter || setter) {\n                if (getter) {\n                    descriptor.get = getter;\n                }\n                if (setter) {\n                    descriptor.set = setter;\n                }\n                // If it was accessor property we're done and return here\n                // in order to avoid adding `value` to the descriptor.\n                return descriptor;\n            }\n        }\n\n        // If we got this far we know that object has an own property that is\n        // not an accessor so we set it as a value and return descriptor.\n        descriptor.value = object[property];\n        descriptor.writable = true;\n        return descriptor;\n    };\n    /* eslint-enable no-proto */\n}\n\n// ES5 15.2.3.4\n// http://es5.github.com/#x15.2.3.4\nif (!Object.getOwnPropertyNames) {\n    Object.getOwnPropertyNames = function getOwnPropertyNames(object) {\n        return Object.keys(object);\n    };\n}\n\n// ES5 15.2.3.5\n// http://es5.github.com/#x15.2.3.5\nif (!Object.create) {\n\n    // Contributed by Brandon Benvie, October, 2012\n    var createEmpty;\n    var supportsProto = !({ __proto__: null } instanceof Object);\n                        // the following produces false positives\n                        // in Opera Mini => not a reliable check\n                        // Object.prototype.__proto__ === null\n\n    // Check for document.domain and active x support\n    // No need to use active x approach when document.domain is not set\n    // see https://github.com/es-shims/es5-shim/issues/150\n    // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n    /* global ActiveXObject */\n    var shouldUseActiveX = function shouldUseActiveX() {\n        // return early if document.domain not set\n        if (!document.domain) {\n            return false;\n        }\n\n        try {\n            return !!new ActiveXObject('htmlfile');\n        } catch (exception) {\n            return false;\n        }\n    };\n\n    // This supports IE8 when document.domain is used\n    // see https://github.com/es-shims/es5-shim/issues/150\n    // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n    var getEmptyViaActiveX = function getEmptyViaActiveX() {\n        var empty;\n        var xDoc;\n\n        xDoc = new ActiveXObject('htmlfile');\n\n        xDoc.write('<script><\\/script>');\n        xDoc.close();\n\n        empty = xDoc.parentWindow.Object.prototype;\n        xDoc = null;\n\n        return empty;\n    };\n\n    // The original implementation using an iframe\n    // before the activex approach was added\n    // see https://github.com/es-shims/es5-shim/issues/150\n    var getEmptyViaIFrame = function getEmptyViaIFrame() {\n        var iframe = document.createElement('iframe');\n        var parent = document.body || document.documentElement;\n        var empty;\n\n        iframe.style.display = 'none';\n        parent.appendChild(iframe);\n        /* eslint-disable no-script-url */\n        iframe.src = 'javascript:';\n        /* eslint-enable no-script-url */\n\n        empty = iframe.contentWindow.Object.prototype;\n        parent.removeChild(iframe);\n        iframe = null;\n\n        return empty;\n    };\n\n    /* global document */\n    if (supportsProto || typeof document === 'undefined') {\n        createEmpty = function () {\n            return { __proto__: null };\n        };\n    } else {\n        // In old IE __proto__ can't be used to manually set `null`, nor does\n        // any other method exist to make an object that inherits from nothing,\n        // aside from Object.prototype itself. Instead, create a new global\n        // object and *steal* its Object.prototype and strip it bare. This is\n        // used as the prototype to create nullary objects.\n        createEmpty = function () {\n            // Determine which approach to use\n            // see https://github.com/es-shims/es5-shim/issues/150\n            var empty = shouldUseActiveX() ? getEmptyViaActiveX() : getEmptyViaIFrame();\n\n            delete empty.constructor;\n            delete empty.hasOwnProperty;\n            delete empty.propertyIsEnumerable;\n            delete empty.isPrototypeOf;\n            delete empty.toLocaleString;\n            delete empty.toString;\n            delete empty.valueOf;\n            /* eslint-disable no-proto */\n            empty.__proto__ = null;\n            /* eslint-enable no-proto */\n\n            var Empty = function Empty() {};\n            Empty.prototype = empty;\n            // short-circuit future calls\n            createEmpty = function () {\n                return new Empty();\n            };\n            return new Empty();\n        };\n    }\n\n    Object.create = function create(prototype, properties) {\n\n        var object;\n        var Type = function Type() {}; // An empty constructor.\n\n        if (prototype === null) {\n            object = createEmpty();\n        } else {\n            if (typeof prototype !== 'object' && typeof prototype !== 'function') {\n                // In the native implementation `parent` can be `null`\n                // OR *any* `instanceof Object`  (Object|Function|Array|RegExp|etc)\n                // Use `typeof` tho, b/c in old IE, DOM elements are not `instanceof Object`\n                // like they are in modern browsers. Using `Object.create` on DOM elements\n                // is...err...probably inappropriate, but the native version allows for it.\n                throw new TypeError('Object prototype may only be an Object or null'); // same msg as Chrome\n            }\n            Type.prototype = prototype;\n            object = new Type();\n            // IE has no built-in implementation of `Object.getPrototypeOf`\n            // neither `__proto__`, but this manually setting `__proto__` will\n            // guarantee that `Object.getPrototypeOf` will work as expected with\n            // objects created using `Object.create`\n            /* eslint-disable no-proto */\n            object.__proto__ = prototype;\n            /* eslint-enable no-proto */\n        }\n\n        if (properties !== void 0) {\n            Object.defineProperties(object, properties);\n        }\n\n        return object;\n    };\n}\n\n// ES5 15.2.3.6\n// http://es5.github.com/#x15.2.3.6\n\n// Patch for WebKit and IE8 standard mode\n// Designed by hax <hax.github.com>\n// related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n// IE8 Reference:\n//     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n//     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n// WebKit Bugs:\n//     https://bugs.webkit.org/show_bug.cgi?id=36423\n\nvar doesDefinePropertyWork = function doesDefinePropertyWork(object) {\n    try {\n        Object.defineProperty(object, 'sentinel', {});\n        return 'sentinel' in object;\n    } catch (exception) {\n        return false;\n    }\n};\n\n// check whether defineProperty works if it's given. Otherwise,\n// shim partially.\nif (Object.defineProperty) {\n    var definePropertyWorksOnObject = doesDefinePropertyWork({});\n    var definePropertyWorksOnDom = typeof document === 'undefined' ||\n        doesDefinePropertyWork(document.createElement('div'));\n    if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {\n        var definePropertyFallback = Object.defineProperty,\n            definePropertiesFallback = Object.defineProperties;\n    }\n}\n\nif (!Object.defineProperty || definePropertyFallback) {\n    var ERR_NON_OBJECT_DESCRIPTOR = 'Property description must be an object: ';\n    var ERR_NON_OBJECT_TARGET = 'Object.defineProperty called on non-object: ';\n    var ERR_ACCESSORS_NOT_SUPPORTED = 'getters & setters can not be defined on this javascript engine';\n\n    Object.defineProperty = function defineProperty(object, property, descriptor) {\n        if ((typeof object !== 'object' && typeof object !== 'function') || object === null) {\n            throw new TypeError(ERR_NON_OBJECT_TARGET + object);\n        }\n        if ((typeof descriptor !== 'object' && typeof descriptor !== 'function') || descriptor === null) {\n            throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);\n        }\n        // make a valiant attempt to use the real defineProperty\n        // for I8's DOM elements.\n        if (definePropertyFallback) {\n            try {\n                return definePropertyFallback.call(Object, object, property, descriptor);\n            } catch (exception) {\n                // try the shim if the real one doesn't work\n            }\n        }\n\n        // If it's a data property.\n        if ('value' in descriptor) {\n            // fail silently if 'writable', 'enumerable', or 'configurable'\n            // are requested but not supported\n            /*\n            // alternate approach:\n            if ( // can't implement these features; allow false but not true\n                ('writable' in descriptor && !descriptor.writable) ||\n                ('enumerable' in descriptor && !descriptor.enumerable) ||\n                ('configurable' in descriptor && !descriptor.configurable)\n            ))\n                throw new RangeError(\n                    'This implementation of Object.defineProperty does not support configurable, enumerable, or writable.'\n                );\n            */\n\n            if (supportsAccessors && (lookupGetter(object, property) || lookupSetter(object, property))) {\n                // As accessors are supported only on engines implementing\n                // `__proto__` we can safely override `__proto__` while defining\n                // a property to make sure that we don't hit an inherited\n                // accessor.\n                /* eslint-disable no-proto */\n                var prototype = object.__proto__;\n                object.__proto__ = prototypeOfObject;\n                // Deleting a property anyway since getter / setter may be\n                // defined on object itself.\n                delete object[property];\n                object[property] = descriptor.value;\n                // Setting original `__proto__` back now.\n                object.__proto__ = prototype;\n                /* eslint-enable no-proto */\n            } else {\n                object[property] = descriptor.value;\n            }\n        } else {\n            if (!supportsAccessors) {\n                throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n            }\n            // If we got that far then getters and setters can be defined !!\n            if ('get' in descriptor) {\n                defineGetter(object, property, descriptor.get);\n            }\n            if ('set' in descriptor) {\n                defineSetter(object, property, descriptor.set);\n            }\n        }\n        return object;\n    };\n}\n\n// ES5 15.2.3.7\n// http://es5.github.com/#x15.2.3.7\nif (!Object.defineProperties || definePropertiesFallback) {\n    Object.defineProperties = function defineProperties(object, properties) {\n        // make a valiant attempt to use the real defineProperties\n        if (definePropertiesFallback) {\n            try {\n                return definePropertiesFallback.call(Object, object, properties);\n            } catch (exception) {\n                // try the shim if the real one doesn't work\n            }\n        }\n\n        Object.keys(properties).forEach(function (property) {\n            if (property !== '__proto__') {\n                Object.defineProperty(object, property, properties[property]);\n            }\n        });\n        return object;\n    };\n}\n\n// ES5 15.2.3.8\n// http://es5.github.com/#x15.2.3.8\nif (!Object.seal) {\n    Object.seal = function seal(object) {\n        if (Object(object) !== object) {\n            throw new TypeError('Object.seal can only be called on Objects.');\n        }\n        // this is misleading and breaks feature-detection, but\n        // allows \"securable\" code to \"gracefully\" degrade to working\n        // but insecure code.\n        return object;\n    };\n}\n\n// ES5 15.2.3.9\n// http://es5.github.com/#x15.2.3.9\nif (!Object.freeze) {\n    Object.freeze = function freeze(object) {\n        if (Object(object) !== object) {\n            throw new TypeError('Object.freeze can only be called on Objects.');\n        }\n        // this is misleading and breaks feature-detection, but\n        // allows \"securable\" code to \"gracefully\" degrade to working\n        // but insecure code.\n        return object;\n    };\n}\n\n// detect a Rhino bug and patch it\ntry {\n    Object.freeze(function () {});\n} catch (exception) {\n    Object.freeze = (function (freezeObject) {\n        return function freeze(object) {\n            if (typeof object === 'function') {\n                return object;\n            } else {\n                return freezeObject(object);\n            }\n        };\n    }(Object.freeze));\n}\n\n// ES5 15.2.3.10\n// http://es5.github.com/#x15.2.3.10\nif (!Object.preventExtensions) {\n    Object.preventExtensions = function preventExtensions(object) {\n        if (Object(object) !== object) {\n            throw new TypeError('Object.preventExtensions can only be called on Objects.');\n        }\n        // this is misleading and breaks feature-detection, but\n        // allows \"securable\" code to \"gracefully\" degrade to working\n        // but insecure code.\n        return object;\n    };\n}\n\n// ES5 15.2.3.11\n// http://es5.github.com/#x15.2.3.11\nif (!Object.isSealed) {\n    Object.isSealed = function isSealed(object) {\n        if (Object(object) !== object) {\n            throw new TypeError('Object.isSealed can only be called on Objects.');\n        }\n        return false;\n    };\n}\n\n// ES5 15.2.3.12\n// http://es5.github.com/#x15.2.3.12\nif (!Object.isFrozen) {\n    Object.isFrozen = function isFrozen(object) {\n        if (Object(object) !== object) {\n            throw new TypeError('Object.isFrozen can only be called on Objects.');\n        }\n        return false;\n    };\n}\n\n// ES5 15.2.3.13\n// http://es5.github.com/#x15.2.3.13\nif (!Object.isExtensible) {\n    Object.isExtensible = function isExtensible(object) {\n        // 1. If Type(O) is not Object throw a TypeError exception.\n        if (Object(object) !== object) {\n            throw new TypeError('Object.isExtensible can only be called on Objects.');\n        }\n        // 2. Return the Boolean value of the [[Extensible]] internal property of O.\n        var name = '';\n        while (owns(object, name)) {\n            name += '?';\n        }\n        object[name] = true;\n        var returnValue = owns(object, name);\n        delete object[name];\n        return returnValue;\n    };\n}\n\n}));\n\n},{}],6:[function(require,module,exports){\n/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2015 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n;\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n    'use strict';\n\n    /* global define, exports, module */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory();\n    }\n}(this, function () {\n\n/**\n * Brings an environment as close to ECMAScript 5 compliance\n * as is possible with the facilities of erstwhile engines.\n *\n * Annotated ES5: http://es5.github.com/ (specific links below)\n * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\n * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/\n */\n\n// Shortcut to an often accessed properties, in order to avoid multiple\n// dereference that costs universally.\nvar ArrayPrototype = Array.prototype;\nvar ObjectPrototype = Object.prototype;\nvar FunctionPrototype = Function.prototype;\nvar StringPrototype = String.prototype;\nvar NumberPrototype = Number.prototype;\nvar array_slice = ArrayPrototype.slice;\nvar array_splice = ArrayPrototype.splice;\nvar array_push = ArrayPrototype.push;\nvar array_unshift = ArrayPrototype.unshift;\nvar array_concat = ArrayPrototype.concat;\nvar call = FunctionPrototype.call;\n\n// Having a toString local variable name breaks in Opera so use to_string.\nvar to_string = ObjectPrototype.toString;\n\nvar isArray = Array.isArray || function isArray(obj) {\n    return to_string.call(obj) === '[object Array]';\n};\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\nvar isRegex; /* inlined from https://npmjs.com/is-regex */ var regexExec = RegExp.prototype.exec, tryRegexExec = function tryRegexExec(value) { try { regexExec.call(value); return true; } catch (e) { return false; } }, regexClass = '[object RegExp]'; isRegex = function isRegex(value) { if (typeof value !== 'object') { return false; } return hasToStringTag ? tryRegexExec(value) : to_string.call(value) === regexClass; };\nvar isString; /* inlined from https://npmjs.com/is-string */ var strValue = String.prototype.valueOf, tryStringObject = function tryStringObject(value) { try { strValue.call(value); return true; } catch (e) { return false; } }, stringClass = '[object String]'; isString = function isString(value) { if (typeof value === 'string') { return true; } if (typeof value !== 'object') { return false; } return hasToStringTag ? tryStringObject(value) : to_string.call(value) === stringClass; };\n\nvar isArguments = function isArguments(value) {\n    var str = to_string.call(value);\n    var isArgs = str === '[object Arguments]';\n    if (!isArgs) {\n        isArgs = !isArray(value) &&\n          value !== null &&\n          typeof value === 'object' &&\n          typeof value.length === 'number' &&\n          value.length >= 0 &&\n          isCallable(value.callee);\n    }\n    return isArgs;\n};\n\n/* inlined from http://npmjs.com/define-properties */\nvar defineProperties = (function (has) {\n  var supportsDescriptors = Object.defineProperty && (function () {\n      try {\n          var obj = {};\n          Object.defineProperty(obj, 'x', { enumerable: false, value: obj });\n          for (var _ in obj) { return false; }\n          return obj.x === obj;\n      } catch (e) { /* this is ES3 */\n          return false;\n      }\n  }());\n\n  // Define configurable, writable and non-enumerable props\n  // if they don't exist.\n  var defineProperty;\n  if (supportsDescriptors) {\n      defineProperty = function (object, name, method, forceAssign) {\n          if (!forceAssign && (name in object)) { return; }\n          Object.defineProperty(object, name, {\n              configurable: true,\n              enumerable: false,\n              writable: true,\n              value: method\n          });\n      };\n  } else {\n      defineProperty = function (object, name, method, forceAssign) {\n          if (!forceAssign && (name in object)) { return; }\n          object[name] = method;\n      };\n  }\n  return function defineProperties(object, map, forceAssign) {\n      for (var name in map) {\n          if (has.call(map, name)) {\n            defineProperty(object, name, map[name], forceAssign);\n          }\n      }\n  };\n}(ObjectPrototype.hasOwnProperty));\n\n//\n// Util\n// ======\n//\n\n/* replaceable with https://npmjs.com/package/es-abstract /helpers/isPrimitive */\nvar isPrimitive = function isPrimitive(input) {\n    var type = typeof input;\n    return input === null || (type !== 'object' && type !== 'function');\n};\n\nvar ES = {\n    // ES5 9.4\n    // http://es5.github.com/#x9.4\n    // http://jsperf.com/to-integer\n    /* replaceable with https://npmjs.com/package/es-abstract ES5.ToInteger */\n    ToInteger: function ToInteger(num) {\n        var n = +num;\n        if (n !== n) { // isNaN\n            n = 0;\n        } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\n            n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n        return n;\n    },\n\n    /* replaceable with https://npmjs.com/package/es-abstract ES5.ToPrimitive */\n    ToPrimitive: function ToPrimitive(input) {\n        var val, valueOf, toStr;\n        if (isPrimitive(input)) {\n            return input;\n        }\n        valueOf = input.valueOf;\n        if (isCallable(valueOf)) {\n            val = valueOf.call(input);\n            if (isPrimitive(val)) {\n                return val;\n            }\n        }\n        toStr = input.toString;\n        if (isCallable(toStr)) {\n            val = toStr.call(input);\n            if (isPrimitive(val)) {\n                return val;\n            }\n        }\n        throw new TypeError();\n    },\n\n    // ES5 9.9\n    // http://es5.github.com/#x9.9\n    /* replaceable with https://npmjs.com/package/es-abstract ES5.ToObject */\n    ToObject: function (o) {\n        /* jshint eqnull: true */\n        if (o == null) { // this matches both null and undefined\n            throw new TypeError(\"can't convert \" + o + ' to object');\n        }\n        return Object(o);\n    },\n\n    /* replaceable with https://npmjs.com/package/es-abstract ES5.ToUint32 */\n    ToUint32: function ToUint32(x) {\n        return x >>> 0;\n    }\n};\n\n//\n// Function\n// ========\n//\n\n// ES-5 15.3.4.5\n// http://es5.github.com/#x15.3.4.5\n\nvar Empty = function Empty() {};\n\ndefineProperties(FunctionPrototype, {\n    bind: function bind(that) { // .length is 1\n        // 1. Let Target be the this value.\n        var target = this;\n        // 2. If IsCallable(Target) is false, throw a TypeError exception.\n        if (!isCallable(target)) {\n            throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n        }\n        // 3. Let A be a new (possibly empty) internal list of all of the\n        //   argument values provided after thisArg (arg1, arg2 etc), in order.\n        // XXX slicedArgs will stand in for \"A\" if used\n        var args = array_slice.call(arguments, 1); // for normal call\n        // 4. Let F be a new native ECMAScript object.\n        // 11. Set the [[Prototype]] internal property of F to the standard\n        //   built-in Function prototype object as specified in 15.3.3.1.\n        // 12. Set the [[Call]] internal property of F as described in\n        //   15.3.4.5.1.\n        // 13. Set the [[Construct]] internal property of F as described in\n        //   15.3.4.5.2.\n        // 14. Set the [[HasInstance]] internal property of F as described in\n        //   15.3.4.5.3.\n        var bound;\n        var binder = function () {\n\n            if (this instanceof bound) {\n                // 15.3.4.5.2 [[Construct]]\n                // When the [[Construct]] internal method of a function object,\n                // F that was created using the bind function is called with a\n                // list of arguments ExtraArgs, the following steps are taken:\n                // 1. Let target be the value of F's [[TargetFunction]]\n                //   internal property.\n                // 2. If target has no [[Construct]] internal method, a\n                //   TypeError exception is thrown.\n                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Construct]] internal\n                //   method of target providing args as the arguments.\n\n                var result = target.apply(\n                    this,\n                    array_concat.call(args, array_slice.call(arguments))\n                );\n                if (Object(result) === result) {\n                    return result;\n                }\n                return this;\n\n            } else {\n                // 15.3.4.5.1 [[Call]]\n                // When the [[Call]] internal method of a function object, F,\n                // which was created using the bind function is called with a\n                // this value and a list of arguments ExtraArgs, the following\n                // steps are taken:\n                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                //   property.\n                // 3. Let target be the value of F's [[TargetFunction]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Call]] internal method\n                //   of target providing boundThis as the this value and\n                //   providing args as the arguments.\n\n                // equiv: target.call(this, ...boundArgs, ...args)\n                return target.apply(\n                    that,\n                    array_concat.call(args, array_slice.call(arguments))\n                );\n\n            }\n\n        };\n\n        // 15. If the [[Class]] internal property of Target is \"Function\", then\n        //     a. Let L be the length property of Target minus the length of A.\n        //     b. Set the length own property of F to either 0 or L, whichever is\n        //       larger.\n        // 16. Else set the length own property of F to 0.\n\n        var boundLength = Math.max(0, target.length - args.length);\n\n        // 17. Set the attributes of the length own property of F to the values\n        //   specified in 15.3.5.1.\n        var boundArgs = [];\n        for (var i = 0; i < boundLength; i++) {\n            boundArgs.push('$' + i);\n        }\n\n        // XXX Build a dynamic function with desired amount of arguments is the only\n        // way to set the length property of a function.\n        // In environments where Content Security Policies enabled (Chrome extensions,\n        // for ex.) all use of eval or Function costructor throws an exception.\n        // However in all of these environments Function.prototype.bind exists\n        // and so this code will never be executed.\n        bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n        if (target.prototype) {\n            Empty.prototype = target.prototype;\n            bound.prototype = new Empty();\n            // Clean up dangling references.\n            Empty.prototype = null;\n        }\n\n        // TODO\n        // 18. Set the [[Extensible]] internal property of F to true.\n\n        // TODO\n        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n        // 20. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n        //   false.\n        // 21. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n        //   and false.\n\n        // TODO\n        // NOTE Function objects created using Function.prototype.bind do not\n        // have a prototype property or the [[Code]], [[FormalParameters]], and\n        // [[Scope]] internal properties.\n        // XXX can't delete prototype in pure-js.\n\n        // 22. Return F.\n        return bound;\n    }\n});\n\n// _Please note: Shortcuts are defined after `Function.prototype.bind` as we\n// us it in defining shortcuts.\nvar owns = call.bind(ObjectPrototype.hasOwnProperty);\n\n//\n// Array\n// =====\n//\n\n// ES5 15.4.4.12\n// http://es5.github.com/#x15.4.4.12\nvar spliceNoopReturnsEmptyArray = (function () {\n    var a = [1, 2];\n    var result = a.splice();\n    return a.length === 2 && isArray(result) && result.length === 0;\n}());\ndefineProperties(ArrayPrototype, {\n    // Safari 5.0 bug where .splice() returns undefined\n    splice: function splice(start, deleteCount) {\n        if (arguments.length === 0) {\n            return [];\n        } else {\n            return array_splice.apply(this, arguments);\n        }\n    }\n}, !spliceNoopReturnsEmptyArray);\n\nvar spliceWorksWithEmptyObject = (function () {\n    var obj = {};\n    ArrayPrototype.splice.call(obj, 0, 0, 1);\n    return obj.length === 1;\n}());\ndefineProperties(ArrayPrototype, {\n    splice: function splice(start, deleteCount) {\n        if (arguments.length === 0) { return []; }\n        var args = arguments;\n        this.length = Math.max(ES.ToInteger(this.length), 0);\n        if (arguments.length > 0 && typeof deleteCount !== 'number') {\n            args = array_slice.call(arguments);\n            if (args.length < 2) {\n                args.push(this.length - start);\n            } else {\n                args[1] = ES.ToInteger(deleteCount);\n            }\n        }\n        return array_splice.apply(this, args);\n    }\n}, !spliceWorksWithEmptyObject);\n\n// ES5 15.4.4.12\n// http://es5.github.com/#x15.4.4.13\n// Return len+argCount.\n// [bugfix, ielt8]\n// IE < 8 bug: [].unshift(0) === undefined but should be \"1\"\nvar hasUnshiftReturnValueBug = [].unshift(0) !== 1;\ndefineProperties(ArrayPrototype, {\n    unshift: function () {\n        array_unshift.apply(this, arguments);\n        return this.length;\n    }\n}, hasUnshiftReturnValueBug);\n\n// ES5 15.4.3.2\n// http://es5.github.com/#x15.4.3.2\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\ndefineProperties(Array, { isArray: isArray });\n\n// The IsCallable() check in the Array functions\n// has been replaced with a strict check on the\n// internal class of the object to trap cases where\n// the provided function was actually a regular\n// expression literal, which in V8 and\n// JavaScriptCore is a typeof \"function\".  Only in\n// V8 are regular expression literals permitted as\n// reduce parameters, so it is desirable in the\n// general case for the shim to match the more\n// strict and common behavior of rejecting regular\n// expressions.\n\n// ES5 15.4.4.18\n// http://es5.github.com/#x15.4.4.18\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach\n\n// Check failure of by-index access of string characters (IE < 9)\n// and failure of `0 in boxedString` (Rhino)\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\n\nvar properlyBoxesContext = function properlyBoxed(method) {\n    // Check node 0.6.21 bug where third parameter is not boxed\n    var properlyBoxesNonStrict = true;\n    var properlyBoxesStrict = true;\n    if (method) {\n        method.call('foo', function (_, __, context) {\n            if (typeof context !== 'object') { properlyBoxesNonStrict = false; }\n        });\n\n        method.call([1], function () {\n            'use strict';\n\n            properlyBoxesStrict = typeof this === 'string';\n        }, 'x');\n    }\n    return !!method && properlyBoxesNonStrict && properlyBoxesStrict;\n};\n\ndefineProperties(ArrayPrototype, {\n    forEach: function forEach(callbackfn /*, thisArg*/) {\n        var object = ES.ToObject(this);\n        var self = splitString && isString(this) ? this.split('') : object;\n        var i = -1;\n        var length = self.length >>> 0;\n        var T;\n        if (arguments.length > 1) {\n          T = arguments[1];\n        }\n\n        // If no callback function or if callback is not a callable function\n        if (!isCallable(callbackfn)) {\n            throw new TypeError('Array.prototype.forEach callback must be a function');\n        }\n\n        while (++i < length) {\n            if (i in self) {\n                // Invoke the callback function with call, passing arguments:\n                // context, property value, property key, thisArg object\n                if (typeof T !== 'undefined') {\n                    callbackfn.call(T, self[i], i, object);\n                } else {\n                    callbackfn(self[i], i, object);\n                }\n            }\n        }\n    }\n}, !properlyBoxesContext(ArrayPrototype.forEach));\n\n// ES5 15.4.4.19\n// http://es5.github.com/#x15.4.4.19\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\ndefineProperties(ArrayPrototype, {\n    map: function map(callbackfn/*, thisArg*/) {\n        var object = ES.ToObject(this);\n        var self = splitString && isString(this) ? this.split('') : object;\n        var length = self.length >>> 0;\n        var result = Array(length);\n        var T;\n        if (arguments.length > 1) {\n            T = arguments[1];\n        }\n\n        // If no callback function or if callback is not a callable function\n        if (!isCallable(callbackfn)) {\n            throw new TypeError('Array.prototype.map callback must be a function');\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self) {\n                if (typeof T !== 'undefined') {\n                    result[i] = callbackfn.call(T, self[i], i, object);\n                } else {\n                    result[i] = callbackfn(self[i], i, object);\n                }\n            }\n        }\n        return result;\n    }\n}, !properlyBoxesContext(ArrayPrototype.map));\n\n// ES5 15.4.4.20\n// http://es5.github.com/#x15.4.4.20\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\ndefineProperties(ArrayPrototype, {\n    filter: function filter(callbackfn /*, thisArg*/) {\n        var object = ES.ToObject(this);\n        var self = splitString && isString(this) ? this.split('') : object;\n        var length = self.length >>> 0;\n        var result = [];\n        var value;\n        var T;\n        if (arguments.length > 1) {\n            T = arguments[1];\n        }\n\n        // If no callback function or if callback is not a callable function\n        if (!isCallable(callbackfn)) {\n            throw new TypeError('Array.prototype.filter callback must be a function');\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self) {\n                value = self[i];\n                if (typeof T === 'undefined' ? callbackfn(value, i, object) : callbackfn.call(T, value, i, object)) {\n                    result.push(value);\n                }\n            }\n        }\n        return result;\n    }\n}, !properlyBoxesContext(ArrayPrototype.filter));\n\n// ES5 15.4.4.16\n// http://es5.github.com/#x15.4.4.16\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\ndefineProperties(ArrayPrototype, {\n    every: function every(callbackfn /*, thisArg*/) {\n        var object = ES.ToObject(this);\n        var self = splitString && isString(this) ? this.split('') : object;\n        var length = self.length >>> 0;\n        var T;\n        if (arguments.length > 1) {\n            T = arguments[1];\n        }\n\n        // If no callback function or if callback is not a callable function\n        if (!isCallable(callbackfn)) {\n            throw new TypeError('Array.prototype.every callback must be a function');\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self && !(typeof T === 'undefined' ? callbackfn(self[i], i, object) : callbackfn.call(T, self[i], i, object))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}, !properlyBoxesContext(ArrayPrototype.every));\n\n// ES5 15.4.4.17\n// http://es5.github.com/#x15.4.4.17\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some\ndefineProperties(ArrayPrototype, {\n    some: function some(callbackfn/*, thisArg */) {\n        var object = ES.ToObject(this);\n        var self = splitString && isString(this) ? this.split('') : object;\n        var length = self.length >>> 0;\n        var T;\n        if (arguments.length > 1) {\n            T = arguments[1];\n        }\n\n        // If no callback function or if callback is not a callable function\n        if (!isCallable(callbackfn)) {\n            throw new TypeError('Array.prototype.some callback must be a function');\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self && (typeof T === 'undefined' ? callbackfn(self[i], i, object) : callbackfn.call(T, self[i], i, object))) {\n                return true;\n            }\n        }\n        return false;\n    }\n}, !properlyBoxesContext(ArrayPrototype.some));\n\n// ES5 15.4.4.21\n// http://es5.github.com/#x15.4.4.21\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce\nvar reduceCoercesToObject = false;\nif (ArrayPrototype.reduce) {\n    reduceCoercesToObject = typeof ArrayPrototype.reduce.call('es5', function (_, __, ___, list) { return list; }) === 'object';\n}\ndefineProperties(ArrayPrototype, {\n    reduce: function reduce(callbackfn /*, initialValue*/) {\n        var object = ES.ToObject(this);\n        var self = splitString && isString(this) ? this.split('') : object;\n        var length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (!isCallable(callbackfn)) {\n            throw new TypeError('Array.prototype.reduce callback must be a function');\n        }\n\n        // no value to return if no initial value and an empty array\n        if (length === 0 && arguments.length === 1) {\n            throw new TypeError('reduce of empty array with no initial value');\n        }\n\n        var i = 0;\n        var result;\n        if (arguments.length >= 2) {\n            result = arguments[1];\n        } else {\n            do {\n                if (i in self) {\n                    result = self[i++];\n                    break;\n                }\n\n                // if array contains no values, no initial value to return\n                if (++i >= length) {\n                    throw new TypeError('reduce of empty array with no initial value');\n                }\n            } while (true);\n        }\n\n        for (; i < length; i++) {\n            if (i in self) {\n                result = callbackfn(result, self[i], i, object);\n            }\n        }\n\n        return result;\n    }\n}, !reduceCoercesToObject);\n\n// ES5 15.4.4.22\n// http://es5.github.com/#x15.4.4.22\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight\nvar reduceRightCoercesToObject = false;\nif (ArrayPrototype.reduceRight) {\n    reduceRightCoercesToObject = typeof ArrayPrototype.reduceRight.call('es5', function (_, __, ___, list) { return list; }) === 'object';\n}\ndefineProperties(ArrayPrototype, {\n    reduceRight: function reduceRight(callbackfn/*, initial*/) {\n        var object = ES.ToObject(this);\n        var self = splitString && isString(this) ? this.split('') : object;\n        var length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (!isCallable(callbackfn)) {\n            throw new TypeError('Array.prototype.reduceRight callback must be a function');\n        }\n\n        // no value to return if no initial value, empty array\n        if (length === 0 && arguments.length === 1) {\n            throw new TypeError('reduceRight of empty array with no initial value');\n        }\n\n        var result;\n        var i = length - 1;\n        if (arguments.length >= 2) {\n            result = arguments[1];\n        } else {\n            do {\n                if (i in self) {\n                    result = self[i--];\n                    break;\n                }\n\n                // if array contains no values, no initial value to return\n                if (--i < 0) {\n                    throw new TypeError('reduceRight of empty array with no initial value');\n                }\n            } while (true);\n        }\n\n        if (i < 0) {\n            return result;\n        }\n\n        do {\n            if (i in self) {\n                result = callbackfn(result, self[i], i, object);\n            }\n        } while (i--);\n\n        return result;\n    }\n}, !reduceRightCoercesToObject);\n\n// ES5 15.4.4.14\n// http://es5.github.com/#x15.4.4.14\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\nvar hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\ndefineProperties(ArrayPrototype, {\n    indexOf: function indexOf(searchElement /*, fromIndex */) {\n        var self = splitString && isString(this) ? this.split('') : ES.ToObject(this);\n        var length = self.length >>> 0;\n\n        if (length === 0) {\n            return -1;\n        }\n\n        var i = 0;\n        if (arguments.length > 1) {\n            i = ES.ToInteger(arguments[1]);\n        }\n\n        // handle negative indices\n        i = i >= 0 ? i : Math.max(0, length + i);\n        for (; i < length; i++) {\n            if (i in self && self[i] === searchElement) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}, hasFirefox2IndexOfBug);\n\n// ES5 15.4.4.15\n// http://es5.github.com/#x15.4.4.15\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf\nvar hasFirefox2LastIndexOfBug = Array.prototype.lastIndexOf && [0, 1].lastIndexOf(0, -3) !== -1;\ndefineProperties(ArrayPrototype, {\n    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */) {\n        var self = splitString && isString(this) ? this.split('') : ES.ToObject(this);\n        var length = self.length >>> 0;\n\n        if (length === 0) {\n            return -1;\n        }\n        var i = length - 1;\n        if (arguments.length > 1) {\n            i = Math.min(i, ES.ToInteger(arguments[1]));\n        }\n        // handle negative indices\n        i = i >= 0 ? i : length - Math.abs(i);\n        for (; i >= 0; i--) {\n            if (i in self && searchElement === self[i]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}, hasFirefox2LastIndexOfBug);\n\n//\n// Object\n// ======\n//\n\n// ES5 15.2.3.14\n// http://es5.github.com/#x15.2.3.14\n\n// http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\nvar hasDontEnumBug = !({ 'toString': null }).propertyIsEnumerable('toString'),\n    hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype'),\n    hasStringEnumBug = !owns('x', '0'),\n    dontEnums = [\n        'toString',\n        'toLocaleString',\n        'valueOf',\n        'hasOwnProperty',\n        'isPrototypeOf',\n        'propertyIsEnumerable',\n        'constructor'\n    ],\n    dontEnumsLength = dontEnums.length;\n\ndefineProperties(Object, {\n    keys: function keys(object) {\n        var isFn = isCallable(object),\n            isArgs = isArguments(object),\n            isObject = object !== null && typeof object === 'object',\n            isStr = isObject && isString(object);\n\n        if (!isObject && !isFn && !isArgs) {\n            throw new TypeError('Object.keys called on a non-object');\n        }\n\n        var theKeys = [];\n        var skipProto = hasProtoEnumBug && isFn;\n        if ((isStr && hasStringEnumBug) || isArgs) {\n            for (var i = 0; i < object.length; ++i) {\n                theKeys.push(String(i));\n            }\n        }\n\n        if (!isArgs) {\n            for (var name in object) {\n                if (!(skipProto && name === 'prototype') && owns(object, name)) {\n                    theKeys.push(String(name));\n                }\n            }\n        }\n\n        if (hasDontEnumBug) {\n            var ctor = object.constructor,\n                skipConstructor = ctor && ctor.prototype === object;\n            for (var j = 0; j < dontEnumsLength; j++) {\n                var dontEnum = dontEnums[j];\n                if (!(skipConstructor && dontEnum === 'constructor') && owns(object, dontEnum)) {\n                    theKeys.push(dontEnum);\n                }\n            }\n        }\n        return theKeys;\n    }\n});\n\nvar keysWorksWithArguments = Object.keys && (function () {\n    // Safari 5.0 bug\n    return Object.keys(arguments).length === 2;\n}(1, 2));\nvar originalKeys = Object.keys;\ndefineProperties(Object, {\n    keys: function keys(object) {\n        if (isArguments(object)) {\n            return originalKeys(ArrayPrototype.slice.call(object));\n        } else {\n            return originalKeys(object);\n        }\n    }\n}, !keysWorksWithArguments);\n\n//\n// Date\n// ====\n//\n\n// ES5 15.9.5.43\n// http://es5.github.com/#x15.9.5.43\n// This function returns a String value represent the instance in time\n// represented by this Date object. The format of the String is the Date Time\n// string format defined in 15.9.1.15. All fields are present in the String.\n// The time zone is always UTC, denoted by the suffix Z. If the time value of\n// this object is not a finite Number a RangeError exception is thrown.\nvar negativeDate = -62198755200000;\nvar negativeYearString = '-000001';\nvar hasNegativeDateBug = Date.prototype.toISOString && new Date(negativeDate).toISOString().indexOf(negativeYearString) === -1;\n\ndefineProperties(Date.prototype, {\n    toISOString: function toISOString() {\n        var result, length, value, year, month;\n        if (!isFinite(this)) {\n            throw new RangeError('Date.prototype.toISOString called on non-finite value.');\n        }\n\n        year = this.getUTCFullYear();\n\n        month = this.getUTCMonth();\n        // see https://github.com/es-shims/es5-shim/issues/111\n        year += Math.floor(month / 12);\n        month = (month % 12 + 12) % 12;\n\n        // the date time string format is specified in 15.9.1.15.\n        result = [month + 1, this.getUTCDate(), this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds()];\n        year = (\n            (year < 0 ? '-' : (year > 9999 ? '+' : '')) +\n            ('00000' + Math.abs(year)).slice((0 <= year && year <= 9999) ? -4 : -6)\n        );\n\n        length = result.length;\n        while (length--) {\n            value = result[length];\n            // pad months, days, hours, minutes, and seconds to have two\n            // digits.\n            if (value < 10) {\n                result[length] = '0' + value;\n            }\n        }\n        // pad milliseconds to have three digits.\n        return (\n            year + '-' + result.slice(0, 2).join('-') +\n            'T' + result.slice(2).join(':') + '.' +\n            ('000' + this.getUTCMilliseconds()).slice(-3) + 'Z'\n        );\n    }\n}, hasNegativeDateBug);\n\n// ES5 15.9.5.44\n// http://es5.github.com/#x15.9.5.44\n// This function provides a String representation of a Date object for use by\n// JSON.stringify (15.12.3).\nvar dateToJSONIsSupported = (function () {\n    try {\n        return Date.prototype.toJSON &&\n            new Date(NaN).toJSON() === null &&\n            new Date(negativeDate).toJSON().indexOf(negativeYearString) !== -1 &&\n            Date.prototype.toJSON.call({ // generic\n                toISOString: function () { return true; }\n            });\n    } catch (e) {\n        return false;\n    }\n}());\nif (!dateToJSONIsSupported) {\n    Date.prototype.toJSON = function toJSON(key) {\n        // When the toJSON method is called with argument key, the following\n        // steps are taken:\n\n        // 1.  Let O be the result of calling ToObject, giving it the this\n        // value as its argument.\n        // 2. Let tv be ES.ToPrimitive(O, hint Number).\n        var O = Object(this);\n        var tv = ES.ToPrimitive(O);\n        // 3. If tv is a Number and is not finite, return null.\n        if (typeof tv === 'number' && !isFinite(tv)) {\n            return null;\n        }\n        // 4. Let toISO be the result of calling the [[Get]] internal method of\n        // O with argument \"toISOString\".\n        var toISO = O.toISOString;\n        // 5. If IsCallable(toISO) is false, throw a TypeError exception.\n        if (!isCallable(toISO)) {\n            throw new TypeError('toISOString property is not callable');\n        }\n        // 6. Return the result of calling the [[Call]] internal method of\n        //  toISO with O as the this value and an empty argument list.\n        return toISO.call(O);\n\n        // NOTE 1 The argument is ignored.\n\n        // NOTE 2 The toJSON function is intentionally generic; it does not\n        // require that its this value be a Date object. Therefore, it can be\n        // transferred to other kinds of objects for use as a method. However,\n        // it does require that any such object have a toISOString method. An\n        // object is free to use the argument key to filter its\n        // stringification.\n    };\n}\n\n// ES5 15.9.4.2\n// http://es5.github.com/#x15.9.4.2\n// based on work shared by Daniel Friesen (dantman)\n// http://gist.github.com/303249\nvar supportsExtendedYears = Date.parse('+033658-09-27T01:46:40.000Z') === 1e15;\nvar acceptsInvalidDates = !isNaN(Date.parse('2012-04-04T24:00:00.500Z')) || !isNaN(Date.parse('2012-11-31T23:59:59.000Z')) || !isNaN(Date.parse('2012-12-31T23:59:60.000Z'));\nvar doesNotParseY2KNewYear = isNaN(Date.parse('2000-01-01T00:00:00.000Z'));\nif (!Date.parse || doesNotParseY2KNewYear || acceptsInvalidDates || !supportsExtendedYears) {\n    // XXX global assignment won't work in embeddings that use\n    // an alternate object for the context.\n    /* global Date: true */\n    /* eslint-disable no-undef */\n    Date = (function (NativeDate) {\n    /* eslint-enable no-undef */\n        // Date.length === 7\n        var DateShim = function Date(Y, M, D, h, m, s, ms) {\n            var length = arguments.length;\n            var date;\n            if (this instanceof NativeDate) {\n                date = length === 1 && String(Y) === Y ? // isString(Y)\n                    // We explicitly pass it through parse:\n                    new NativeDate(DateShim.parse(Y)) :\n                    // We have to manually make calls depending on argument\n                    // length here\n                    length >= 7 ? new NativeDate(Y, M, D, h, m, s, ms) :\n                    length >= 6 ? new NativeDate(Y, M, D, h, m, s) :\n                    length >= 5 ? new NativeDate(Y, M, D, h, m) :\n                    length >= 4 ? new NativeDate(Y, M, D, h) :\n                    length >= 3 ? new NativeDate(Y, M, D) :\n                    length >= 2 ? new NativeDate(Y, M) :\n                    length >= 1 ? new NativeDate(Y) :\n                                  new NativeDate();\n            } else {\n                date = NativeDate.apply(this, arguments);\n            }\n            // Prevent mixups with unfixed Date object\n            defineProperties(date, { constructor: DateShim }, true);\n            return date;\n        };\n\n        // 15.9.1.15 Date Time String Format.\n        var isoDateExpression = new RegExp('^' +\n            '(\\\\d{4}|[+-]\\\\d{6})' + // four-digit year capture or sign +\n                                      // 6-digit extended year\n            '(?:-(\\\\d{2})' + // optional month capture\n            '(?:-(\\\\d{2})' + // optional day capture\n            '(?:' + // capture hours:minutes:seconds.milliseconds\n                'T(\\\\d{2})' + // hours capture\n                ':(\\\\d{2})' + // minutes capture\n                '(?:' + // optional :seconds.milliseconds\n                    ':(\\\\d{2})' + // seconds capture\n                    '(?:(\\\\.\\\\d{1,}))?' + // milliseconds capture\n                ')?' +\n            '(' + // capture UTC offset component\n                'Z|' + // UTC capture\n                '(?:' + // offset specifier +/-hours:minutes\n                    '([-+])' + // sign capture\n                    '(\\\\d{2})' + // hours offset capture\n                    ':(\\\\d{2})' + // minutes offset capture\n                ')' +\n            ')?)?)?)?' +\n        '$');\n\n        var months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n\n        var dayFromMonth = function dayFromMonth(year, month) {\n            var t = month > 1 ? 1 : 0;\n            return (\n                months[month] +\n                Math.floor((year - 1969 + t) / 4) -\n                Math.floor((year - 1901 + t) / 100) +\n                Math.floor((year - 1601 + t) / 400) +\n                365 * (year - 1970)\n            );\n        };\n\n        var toUTC = function toUTC(t) {\n            return Number(new NativeDate(1970, 0, 1, 0, 0, 0, t));\n        };\n\n        // Copy any custom methods a 3rd party library may have added\n        for (var key in NativeDate) {\n            if (owns(NativeDate, key)) {\n                DateShim[key] = NativeDate[key];\n            }\n        }\n\n        // Copy \"native\" methods explicitly; they may be non-enumerable\n        defineProperties(DateShim, {\n            now: NativeDate.now,\n            UTC: NativeDate.UTC\n        }, true);\n        DateShim.prototype = NativeDate.prototype;\n        defineProperties(DateShim.prototype, {\n            constructor: DateShim\n        }, true);\n\n        // Upgrade Date.parse to handle simplified ISO 8601 strings\n        var parseShim = function parse(string) {\n            var match = isoDateExpression.exec(string);\n            if (match) {\n                // parse months, days, hours, minutes, seconds, and milliseconds\n                // provide default values if necessary\n                // parse the UTC offset component\n                var year = Number(match[1]),\n                    month = Number(match[2] || 1) - 1,\n                    day = Number(match[3] || 1) - 1,\n                    hour = Number(match[4] || 0),\n                    minute = Number(match[5] || 0),\n                    second = Number(match[6] || 0),\n                    millisecond = Math.floor(Number(match[7] || 0) * 1000),\n                    // When time zone is missed, local offset should be used\n                    // (ES 5.1 bug)\n                    // see https://bugs.ecmascript.org/show_bug.cgi?id=112\n                    isLocalTime = Boolean(match[4] && !match[8]),\n                    signOffset = match[9] === '-' ? 1 : -1,\n                    hourOffset = Number(match[10] || 0),\n                    minuteOffset = Number(match[11] || 0),\n                    result;\n                if (\n                    hour < (\n                        minute > 0 || second > 0 || millisecond > 0 ?\n                        24 : 25\n                    ) &&\n                    minute < 60 && second < 60 && millisecond < 1000 &&\n                    month > -1 && month < 12 && hourOffset < 24 &&\n                    minuteOffset < 60 && // detect invalid offsets\n                    day > -1 &&\n                    day < (\n                        dayFromMonth(year, month + 1) -\n                        dayFromMonth(year, month)\n                    )\n                ) {\n                    result = (\n                        (dayFromMonth(year, month) + day) * 24 +\n                        hour +\n                        hourOffset * signOffset\n                    ) * 60;\n                    result = (\n                        (result + minute + minuteOffset * signOffset) * 60 +\n                        second\n                    ) * 1000 + millisecond;\n                    if (isLocalTime) {\n                        result = toUTC(result);\n                    }\n                    if (-8.64e15 <= result && result <= 8.64e15) {\n                        return result;\n                    }\n                }\n                return NaN;\n            }\n            return NativeDate.parse.apply(this, arguments);\n        };\n        defineProperties(DateShim, { parse: parseShim });\n\n        return DateShim;\n    }(Date));\n    /* global Date: false */\n}\n\n// ES5 15.9.4.4\n// http://es5.github.com/#x15.9.4.4\nif (!Date.now) {\n    Date.now = function now() {\n        return new Date().getTime();\n    };\n}\n\n//\n// Number\n// ======\n//\n\n// ES5.1 15.7.4.5\n// http://es5.github.com/#x15.7.4.5\nvar hasToFixedBugs = NumberPrototype.toFixed && (\n  (0.00008).toFixed(3) !== '0.000' ||\n  (0.9).toFixed(0) !== '1' ||\n  (1.255).toFixed(2) !== '1.25' ||\n  (1000000000000000128).toFixed(0) !== '1000000000000000128'\n);\n\nvar toFixedHelpers = {\n  base: 1e7,\n  size: 6,\n  data: [0, 0, 0, 0, 0, 0],\n  multiply: function multiply(n, c) {\n      var i = -1;\n      var c2 = c;\n      while (++i < toFixedHelpers.size) {\n          c2 += n * toFixedHelpers.data[i];\n          toFixedHelpers.data[i] = c2 % toFixedHelpers.base;\n          c2 = Math.floor(c2 / toFixedHelpers.base);\n      }\n  },\n  divide: function divide(n) {\n      var i = toFixedHelpers.size, c = 0;\n      while (--i >= 0) {\n          c += toFixedHelpers.data[i];\n          toFixedHelpers.data[i] = Math.floor(c / n);\n          c = (c % n) * toFixedHelpers.base;\n      }\n  },\n  numToString: function numToString() {\n      var i = toFixedHelpers.size;\n      var s = '';\n      while (--i >= 0) {\n          if (s !== '' || i === 0 || toFixedHelpers.data[i] !== 0) {\n              var t = String(toFixedHelpers.data[i]);\n              if (s === '') {\n                  s = t;\n              } else {\n                  s += '0000000'.slice(0, 7 - t.length) + t;\n              }\n          }\n      }\n      return s;\n  },\n  pow: function pow(x, n, acc) {\n      return (n === 0 ? acc : (n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc)));\n  },\n  log: function log(x) {\n      var n = 0;\n      var x2 = x;\n      while (x2 >= 4096) {\n          n += 12;\n          x2 /= 4096;\n      }\n      while (x2 >= 2) {\n          n += 1;\n          x2 /= 2;\n      }\n      return n;\n  }\n};\n\ndefineProperties(NumberPrototype, {\n    toFixed: function toFixed(fractionDigits) {\n        var f, x, s, m, e, z, j, k;\n\n        // Test for NaN and round fractionDigits down\n        f = Number(fractionDigits);\n        f = f !== f ? 0 : Math.floor(f);\n\n        if (f < 0 || f > 20) {\n            throw new RangeError('Number.toFixed called with invalid number of decimals');\n        }\n\n        x = Number(this);\n\n        // Test for NaN\n        if (x !== x) {\n            return 'NaN';\n        }\n\n        // If it is too big or small, return the string value of the number\n        if (x <= -1e21 || x >= 1e21) {\n            return String(x);\n        }\n\n        s = '';\n\n        if (x < 0) {\n            s = '-';\n            x = -x;\n        }\n\n        m = '0';\n\n        if (x > 1e-21) {\n            // 1e-21 < x < 1e21\n            // -70 < log2(x) < 70\n            e = toFixedHelpers.log(x * toFixedHelpers.pow(2, 69, 1)) - 69;\n            z = (e < 0 ? x * toFixedHelpers.pow(2, -e, 1) : x / toFixedHelpers.pow(2, e, 1));\n            z *= 0x10000000000000; // Math.pow(2, 52);\n            e = 52 - e;\n\n            // -18 < e < 122\n            // x = z / 2 ^ e\n            if (e > 0) {\n                toFixedHelpers.multiply(0, z);\n                j = f;\n\n                while (j >= 7) {\n                    toFixedHelpers.multiply(1e7, 0);\n                    j -= 7;\n                }\n\n                toFixedHelpers.multiply(toFixedHelpers.pow(10, j, 1), 0);\n                j = e - 1;\n\n                while (j >= 23) {\n                    toFixedHelpers.divide(1 << 23);\n                    j -= 23;\n                }\n\n                toFixedHelpers.divide(1 << j);\n                toFixedHelpers.multiply(1, 1);\n                toFixedHelpers.divide(2);\n                m = toFixedHelpers.numToString();\n            } else {\n                toFixedHelpers.multiply(0, z);\n                toFixedHelpers.multiply(1 << (-e), 0);\n                m = toFixedHelpers.numToString() + '0.00000000000000000000'.slice(2, 2 + f);\n            }\n        }\n\n        if (f > 0) {\n            k = m.length;\n\n            if (k <= f) {\n                m = s + '0.0000000000000000000'.slice(0, f - k + 2) + m;\n            } else {\n                m = s + m.slice(0, k - f) + '.' + m.slice(k - f);\n            }\n        } else {\n            m = s + m;\n        }\n\n        return m;\n    }\n}, hasToFixedBugs);\n\n//\n// String\n// ======\n//\n\n// ES5 15.5.4.14\n// http://es5.github.com/#x15.5.4.14\n\n// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\n// Many browsers do not split properly with regular expressions or they\n// do not perform the split correctly under obscure conditions.\n// See http://blog.stevenlevithan.com/archives/cross-browser-split\n// I've tested in many browsers and this seems to cover the deviant ones:\n//    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\n//    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\n//    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\n//       [undefined, \"t\", undefined, \"e\", ...]\n//    ''.split(/.?/) should be [], not [\"\"]\n//    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\n\nvar string_split = StringPrototype.split;\nif (\n    'ab'.split(/(?:ab)*/).length !== 2 ||\n    '.'.split(/(.?)(.?)/).length !== 4 ||\n    'tesst'.split(/(s)*/)[1] === 't' ||\n    'test'.split(/(?:)/, -1).length !== 4 ||\n    ''.split(/.?/).length ||\n    '.'.split(/()()/).length > 1\n) {\n    (function () {\n        var compliantExecNpcg = typeof (/()??/).exec('')[1] === 'undefined'; // NPCG: nonparticipating capturing group\n\n        StringPrototype.split = function (separator, limit) {\n            var string = this;\n            if (typeof separator === 'undefined' && limit === 0) {\n                return [];\n            }\n\n            // If `separator` is not a regex, use native split\n            if (!isRegex(separator)) {\n                return string_split.call(this, separator, limit);\n            }\n\n            var output = [];\n            var flags = (separator.ignoreCase ? 'i' : '') +\n                        (separator.multiline ? 'm' : '') +\n                        (separator.extended ? 'x' : '') + // Proposed for ES6\n                        (separator.sticky ? 'y' : ''), // Firefox 3+\n                lastLastIndex = 0,\n                // Make `global` and avoid `lastIndex` issues by working with a copy\n                separator2, match, lastIndex, lastLength;\n            var separatorCopy = new RegExp(separator.source, flags + 'g');\n            string += ''; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            var splitLimit = typeof limit === 'undefined' ?\n                -1 >>> 0 : // Math.pow(2, 32) - 1\n                ES.ToUint32(limit);\n            match = separatorCopy.exec(string);\n            while (match) {\n                // `separatorCopy.lastIndex` is not reliable cross-browser\n                lastIndex = match.index + match[0].length;\n                if (lastIndex > lastLastIndex) {\n                    output.push(string.slice(lastLastIndex, match.index));\n                    // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                    // nonparticipating capturing groups\n                    if (!compliantExecNpcg && match.length > 1) {\n                        /* eslint-disable no-loop-func */\n                        match[0].replace(separator2, function () {\n                            for (var i = 1; i < arguments.length - 2; i++) {\n                                if (typeof arguments[i] === 'undefined') {\n                                    match[i] = void 0;\n                                }\n                            }\n                        });\n                        /* eslint-enable no-loop-func */\n                    }\n                    if (match.length > 1 && match.index < string.length) {\n                        array_push.apply(output, match.slice(1));\n                    }\n                    lastLength = match[0].length;\n                    lastLastIndex = lastIndex;\n                    if (output.length >= splitLimit) {\n                        break;\n                    }\n                }\n                if (separatorCopy.lastIndex === match.index) {\n                    separatorCopy.lastIndex++; // Avoid an infinite loop\n                }\n                match = separatorCopy.exec(string);\n            }\n            if (lastLastIndex === string.length) {\n                if (lastLength || !separatorCopy.test('')) {\n                    output.push('');\n                }\n            } else {\n                output.push(string.slice(lastLastIndex));\n            }\n            return output.length > splitLimit ? output.slice(0, splitLimit) : output;\n        };\n    }());\n\n// [bugfix, chrome]\n// If separator is undefined, then the result array contains just one String,\n// which is the this value (converted to a String). If limit is not undefined,\n// then the output array is truncated so that it contains no more than limit\n// elements.\n// \"0\".split(undefined, 0) -> []\n} else if ('0'.split(void 0, 0).length) {\n    StringPrototype.split = function split(separator, limit) {\n        if (typeof separator === 'undefined' && limit === 0) { return []; }\n        return string_split.call(this, separator, limit);\n    };\n}\n\nvar str_replace = StringPrototype.replace;\nvar replaceReportsGroupsCorrectly = (function () {\n    var groups = [];\n    'x'.replace(/x(.)?/g, function (match, group) {\n        groups.push(group);\n    });\n    return groups.length === 1 && typeof groups[0] === 'undefined';\n}());\n\nif (!replaceReportsGroupsCorrectly) {\n    StringPrototype.replace = function replace(searchValue, replaceValue) {\n        var isFn = isCallable(replaceValue);\n        var hasCapturingGroups = isRegex(searchValue) && (/\\)[*?]/).test(searchValue.source);\n        if (!isFn || !hasCapturingGroups) {\n            return str_replace.call(this, searchValue, replaceValue);\n        } else {\n            var wrappedReplaceValue = function (match) {\n                var length = arguments.length;\n                var originalLastIndex = searchValue.lastIndex;\n                searchValue.lastIndex = 0;\n                var args = searchValue.exec(match) || [];\n                searchValue.lastIndex = originalLastIndex;\n                args.push(arguments[length - 2], arguments[length - 1]);\n                return replaceValue.apply(this, args);\n            };\n            return str_replace.call(this, searchValue, wrappedReplaceValue);\n        }\n    };\n}\n\n// ECMA-262, 3rd B.2.3\n// Not an ECMAScript standard, although ECMAScript 3rd Edition has a\n// non-normative section suggesting uniform semantics and it should be\n// normalized across all browsers\n// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\nvar string_substr = StringPrototype.substr;\nvar hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\ndefineProperties(StringPrototype, {\n    substr: function substr(start, length) {\n        var normalizedStart = start;\n        if (start < 0) {\n            normalizedStart = Math.max(this.length + start, 0);\n        }\n        return string_substr.call(this, normalizedStart, length);\n    }\n}, hasNegativeSubstrBug);\n\n// ES5 15.5.4.20\n// whitespace from: http://es5.github.io/#x15.5.4.20\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n    '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar wsRegexChars = '[' + ws + ']';\nvar trimBeginRegexp = new RegExp('^' + wsRegexChars + wsRegexChars + '*');\nvar trimEndRegexp = new RegExp(wsRegexChars + wsRegexChars + '*$');\nvar hasTrimWhitespaceBug = StringPrototype.trim && (ws.trim() || !zeroWidth.trim());\ndefineProperties(StringPrototype, {\n    // http://blog.stevenlevithan.com/archives/faster-trim-javascript\n    // http://perfectionkills.com/whitespace-deviations/\n    trim: function trim() {\n        if (typeof this === 'undefined' || this === null) {\n            throw new TypeError(\"can't convert \" + this + ' to object');\n        }\n        return String(this).replace(trimBeginRegexp, '').replace(trimEndRegexp, '');\n    }\n}, hasTrimWhitespaceBug);\n\n// ES-5 15.1.2.2\nif (parseInt(ws + '08') !== 8 || parseInt(ws + '0x16') !== 22) {\n    /* global parseInt: true */\n    parseInt = (function (origParseInt) {\n        var hexRegex = /^0[xX]/;\n        return function parseInt(str, radix) {\n            var string = String(str).trim();\n            var defaultedRadix = Number(radix) || (hexRegex.test(string) ? 16 : 10);\n            return origParseInt(string, defaultedRadix);\n        };\n    }(parseInt));\n}\n\n}));\n\n},{}],7:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.3.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"_process\":4}],8:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule cx\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\n\n'use strict';\nvar warning = require(\"./warning\");\n\nvar warned = false;\n\nfunction cx(classNames) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      warned,\n      'React.addons.classSet will be deprecated in a future version. See ' +\n      'http://fb.me/react-addons-classset'\n    ) : null);\n    warned = true;\n  }\n\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function(className) {\n      return classNames[className];\n    }).join(' ');\n  } else {\n    return Array.prototype.join.call(arguments, ' ');\n  }\n}\n\nmodule.exports = cx;\n\n}).call(this,require('_process'))\n},{\"./warning\":10,\"_process\":4}],9:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n\n},{}],10:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n      console.warn(message);\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n}).call(this,require('_process'))\n},{\"./emptyFunction\":9,\"_process\":4}],11:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\n\nvar Footer = React.createClass({displayName: \"Footer\",\n    render: function() {\n        return (\n            React.createElement(\"footer\", {className: \"footer\"}, \n                React.createElement(\"div\", {className: \"row\"}, \n                    React.createElement(\"div\", {className: \"col-md-8 col-md-offset-2 col-sm-12\"}, \n                        React.createElement(\"hr\", null), \n                        React.createElement(\"div\", {className: \"logo\"}), \n                        React.createElement(\"p\", {className: \"text-center small\"}, \"Fabule Fabrications Inc\")\n                    )\n                )\n            )\n        );\n    }\n});\n\nmodule.exports = Footer;\n\n\n},{\"react\":\"react\"}],12:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\n\nvar SimpleHeader = React.createClass({displayName: \"SimpleHeader\",\n    render: function() {\n        return (\n\t\t\tReact.createElement(\"header\", {className: \"simple-header text-center\"}, \n                React.createElement(\"div\", {className: \"logo\"}, React.createElement(\"span\", null, \"BOM SQUAD\"))\n            )\n        );\n    }\n});\n\nmodule.exports = SimpleHeader;\n\n},{\"react\":\"react\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\n\nvar Footer = require(\"components/Footer.jsx\");\nvar SimpleHeader = require(\"components/SimpleHeader.jsx\");\n\nvar NavigationErrorModel = require(\"models/NavigationErrorModel\");\n\nmodule.exports = React.createClass({displayName: \"exports\",\n\n    propTypes: {\n        statusCode: React.PropTypes.string\n    },\n\n    /**\n     * @return {object}\n     */\n    render: function() {\n        var model = new NavigationErrorModel({statusCode: this.props.statusCode});\n\n        return (\n            React.createElement(\"div\", {className: \"container-fluid dark-background\"}, \n                React.createElement(SimpleHeader, null), \n                React.createElement(\"div\", {className: \"row\"}, \n                    React.createElement(\"div\", {className: \"col-md-6 col-md-offset-3 col-sm-10 col-sm-offset-1\"}, \n                        this.props.children\n                    )\n                ), \n                React.createElement(Footer, null)\n            )\n        );\n    }\n\n});\n\n\n},{\"components/Footer.jsx\":11,\"components/SimpleHeader.jsx\":12,\"models/NavigationErrorModel\":21,\"react\":\"react\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\nvar validator = require('validator');\nvar cx = require(\"react/lib/cx\");\n\nvar InputConstants = require(\"constants/InputConstants\");\n\nvar ValidatedInput = React.createClass({displayName: \"ValidatedInput\",\n\n    propTypes: {\n        name: React.PropTypes.string.isRequired,\n        value: React.PropTypes.string,\n        onChange: React.PropTypes.func,\n        onEnter: React.PropTypes.func,\n        label: React.PropTypes.string,\n        placeholder: React.PropTypes.string,\n        type: React.PropTypes.string,\n        errorLabel: React.PropTypes.string,\n        displayFeedback: React.PropTypes.bool,\n        icon: React.PropTypes.node,\n        autoFocus: React.PropTypes.bool,\n        autoComplete: React.PropTypes.string\n    },\n\n    getInitialState: function() {\n        return {\n            value: this.props.value\n        };\n    },\n\n    render: function() {\n    \tvar isValid = !this.props.errorLabel;\n        return (\n            React.createElement(\"div\", null, \n                React.createElement(\"div\", {className: cx({\n                    \"form-group\" : true,\n                    \"has-success\": this.props.displayFeedback && this.state.value !== null && isValid,\n                    \"has-error\": this.props.displayFeedback && this.state.value !== null && !isValid,\n                    \"has-feedback\": this.props.displayFeedback && this.state.value !== null\n                    })}, \n                    this.renderLabel(), \n                    this.renderInput(), \n                    React.createElement(\"span\", {\n                        className: cx({\n                            \"glyphicon\": true,\n                            \"glyphicon-ok\": this.props.displayFeedback && this.state.value !== null && isValid,\n                            \"glyphicon-remove\": this.props.displayFeedback && this.state.value !== null && !isValid,\n                            \"hide\": !this.props.displayFeedback && this.state.value !== null,\n                            \"form-control-feedback\": true,\n                        }), \n                        \"aria-hidden\": \"true\"}), \n                    React.createElement(\"div\", {className: cx({\n                        \"hide\": !(this.props.displayFeedback && this.state.value !== null) || isValid,\n                        \"text-danger\": true\n                        })}, \n                        this.props.errorLabel\n                    )\n                )\n            ));\n    },\n\n    renderLabel: function() {\n        return this.props.label ? React.createElement(\"label\", null, this.props.label) : null;\n    },\n\n    renderInput: function() {\n        var icon = this.renderIcon();\n\n        var input = (\n            React.createElement(\"input\", {\n                ref: \"input\", \n                type: this.props.type || \"text\", \n                value: this.state.value, \n                className: \"form-control\", \n                name: this.props.name, \n                placeholder: this.props.placeholder || \"\", \n                onChange: this.onChange, \n                autoComplete: this.props.autoComplete, \n                autoFocus: this.props.autoFocus, \n                onKeyDown: this.onKeyDown}\n                ));\n\n        if (icon) {\n            input = (\n                React.createElement(\"div\", {className: \"input-group\"}, \n                    icon, \n                    input\n                ))\n        }\n\n        return input;\n    },\n\n    renderIcon: function() {\n        return this.props.icon ? (\n            React.createElement(\"span\", {className: \"input-group-addon\"}, \n                this.props.icon\n            )\n        ) : null;\n    },\n\n    onChange: function(event) {\n        this.setState({\n            value: event.target.value\n        });\n\n        if (this.props.onChange) {\n            this.props.onChange(event);\n        }\n    },\n\n    onKeyDown: function(event) {\n        if (event.keyCode === InputConstants.ENTER) {\n            if (this.props.onEnter) {\n                this.props.onEnter();\n                event.preventDefault();\n            }\n        }\n    },\n\n    reset: function() {\n        this.onChange({\n            target: {\n                name: this.props.name,\n                value: this.props.value\n            }\n        });\n    }\n});\n\nmodule.exports = ValidatedInput;\n\n\n},{\"constants/InputConstants\":16,\"react\":\"react\",\"react/lib/cx\":8,\"validator\":\"validator\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar ApiConstants = {\n  PATH_PREFIX: \"/api\",\n  MAX_RETRIES: 3,\n  RETRY_INTERVAL: 10000, // 10 seconds\n  PING_INTERVAL: 600000 //10 minutes\n};\n\nmodule.exports = ApiConstants;\n\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27\n};\n\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\n\nfunction ApiError(attributes) {\n    attributes = attributes || {};\n\n    this.name = \"ApiError\";\n    this.xhr = attributes.xhr;\n    this.textStatus = attributes.textStatus;\n    this.errorThrown = attributes.errorThrown;\n\n    if (attributes.xhr && _.isObject(attributes.xhr.responseJSON)) {\n        this.message = attributes.xhr.responseJSON.detail;\n        this.validationMessages = attributes.xhr.responseJSON.validation_messages;\n    }\n    else {\n        this.message = attributes.title;\n    }\n}\n\nApiError.prototype = Object.create(Error.prototype);\nApiError.prototype.constructor = ApiError;\n\nApiError.prototype.getValidationErrors = function() {\n    var errors = {};\n    _.each(this.validationMessages, function(messages, key) {\n        errors[key] = _.isArray(messages) ? messages[0] : messages;\n    });\n    return errors;\n};\n\nmodule.exports = ApiError;\n\n\n},{\"underscore\":\"underscore\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\n\nvar UserEvent = function(options) {\n\t_.extend(this, options);\n};\n\nUserEvent.EVENT_LOG_IN    = \"user:log_in\";\nUserEvent.EVENT_LOAD_DATA = \"user:load_data\";\nUserEvent.EVENT_LOG_OUT   = \"user:log_out\";\nUserEvent.EVENT_CHANGE    = \"user:change\";\n\nmodule.exports = UserEvent;\n\n\n},{\"underscore\":\"underscore\"}],19:[function(require,module,exports){\n\"use strict\";\n\nvar ApiError = require(\"errors/ApiError\");\nvar Backbone = require(\"backbone\");\n\nvar ExtendedModel = Backbone.Model.extend({\n\n    sync: function(method, model, options) {\n        return new Promise(function(resolve, reject) {\n            var success;\n            var error;\n\n            success = options.success;\n            options.success = function(response) {\n                if (success) {\n                    success(response);\n                }\n                resolve(model);\n            };\n\n            error = options.error;\n            options.error = function(xhr, textStatus, errorThrown) {\n                if (error) {\n                    error.apply(this, arguments);\n                }\n                reject(new ApiError({\n                  xhr: xhr,\n                  textStatus: textStatus,\n                  errorThrown: errorThrown\n                }));\n            };\n\n            Backbone.sync(method, model, options);\n        });\n    },\n\n    fetch: function fetch() {\n        var xhr = Backbone.Model.prototype.fetch.apply(this, arguments);\n        return (xhr !== false) ? xhr : Promise.reject(new Error(\"Invalid model attributes.\"));\n    },\n\n    save: function save() {\n        var xhr = Backbone.Model.prototype.save.apply(this, arguments);\n        return (xhr !== false) ? xhr : Promise.reject(new Error(\"Invalid model attributes.\"));\n    },\n\n    destroy: function destroy(options) {\n        options = options ? options : {};\n\n        var xhr = Backbone.Model.prototype.destroy.apply(this, [options]);\n        return (xhr !== false) ? xhr : Promise.reject(new Error(\"Can't destroy new model\"));\n    }\n\n});\n\nmodule.exports = ExtendedModel;\n\n\n},{\"backbone\":\"backbone\",\"errors/ApiError\":17}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\nvar ApiConstants = require(\"constants/ApiConstants\");\nvar ExtendedModel = require(\"utils/ExtendedModel\");\n\nvar CompanyModel = ExtendedModel.extend({\n    urlRoot: ApiConstants.PATH_PREFIX + \"/company\",\n    validationErrors: undefined,\n    serverError: undefined,\n\n    constructor: function() {\n        this.validationErrors = {};\n        ExtendedModel.apply(this, arguments);\n    },\n\n    fetchByToken: function(token) {\n        var options = {\n            url: _.result(this, \"urlRoot\") + \"/\" + token\n        };\n\n        return this.fetch(options);\n    },\n\n    hasValidationErrors: function(keys) {\n        if (!keys) {\n            return !_.isEmpty(this.validationErrors);\n        }\n\n        keys = _.isArray(keys) ? keys : [keys];\n        return !_.isEmpty( _.intersection(keys, _.keys(this.validationErrors)));\n    },\n\n    getValidationErrors: function(key) {\n        return key ? this.validationErrors[key] : this.validationErrors;\n    },\n\n    setValidationErrors: function(key, errors) {\n        if (!key) { return; }\n\n        // If errors is undefined, we are setting ALL errors\n        if (!errors) {\n            this.validationErrors = key;\n        }\n        else {\n            errors = _.isArray(errors) ? errors : [errors];\n            this.validationErrors[key] = errors;\n        }\n\n        this.trigger(\"validate\");\n    },\n\n    clearValidationErrors: function() {\n        this.validationErrors = {};\n        this.trigger(\"validate\");\n    },\n\n    hasServerError: function() {\n        return !!this.serverError;\n    },\n\n    setServerError: function(error) {\n        this.serverError = error;\n        this.trigger(\"validate\");\n    },\n\n    clearServerError: function() {\n        this.serverError = undefined;\n        this.trigger(\"validate\");\n    },\n\n    getServerError: function() {\n        return this.serverError;\n    },\n\n    clearErrors: function() {\n        this.validationErrors = {};\n        this.serverError = undefined;\n        this.trigger(\"validate\");\n    }\n});\n\nmodule.exports = CompanyModel;\n\n\n},{\"constants/ApiConstants\":15,\"underscore\":\"underscore\",\"utils/ExtendedModel\":31}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\nvar Backbone = require(\"backbone\");\n\nvar validation = require(\"backbone-validation\");\n_.extend(Backbone.Model.prototype, validation.mixin);\n\nvar errors = {\n\t400: {\n\t\t\"title\": \"Could not Complete Request\",\n\t\t\"description\": \"A problem occurred while trying to process a request. Please try again.\"\n\t},\n\t401: {\n\t\t\"title\": \"Unauthorized\",\n\t\t\"description\": \"Access to this page is restricted. Please log in and try again.\"\n\t},\n\t403: {\n\t\t\"title\": \"Forbidden\",\n\t\t\"description\": \"Access to this page is restricted.\"\n\t},\n\t404: {\n\t\t\"title\": \"Page not Found\",\n\t\t\"description\": \"Hey! You've stumbled upon a page that doesn't exist.\"\n\t},\n\t500: {\n\t\t\"title\": \"Server Error\",\n\t\t\"description\": \"The server encountered a problem. Please try again later.\"\n\t}\n};\n\nfunction getError(statusCode) {\n\n\tvar match = errors[statusCode];\n\tif(!!match) {\n\t\treturn _.extend(match, {statusCode: statusCode});\n\t}\n\n\t// Try approximate match (4xx or 5xx)\n\tvar code = (statusCode - (statusCode % 100));\n\tmatch = errors[code];\n\tif(!!match) {\n\t\treturn _.extend(match, {statusCode: code});\n\t}\n\n\treturn _.extend(errors[404], {statusCode: 404});\n}\n\nmodule.exports = Backbone.Model.extend({\n\n\tinitialize: function(options) {\n\t\t_.extend(this, getError(options.statusCode || 404));\n\t},\n\n\tgetTitle: function() {\n\t\treturn this.statusCode + \": \" + this.title;\n\t},\n\n    save: function() {\n        throw new Error(\"This model should not be saved\");\n    }\n});\n\n\n},{\"backbone\":\"backbone\",\"backbone-validation\":3,\"underscore\":\"underscore\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\nvar ApiConstants = require(\"constants/ApiConstants\");\nvar Backbone = require(\"backbone\");\nvar CompanyMixin = require(\"utils/CompanyMixin\");\nvar validation = require(\"backbone-validation\");\nvar BaseModel = require(\"models/BaseModel\");\n\nvar DEFAULT_STATE = \"idle\";\n\nmodule.exports = BaseModel.extend({\n\tmixins: [\n\t\tCompanyMixin,\n\t\tvalidation.mixin\n\t],\n\n\tSTATE_IDLE: \"idle\",\n\tSTATE_SENDING: \"sending\",\n\tSTATE_ERROR: \"error\",\n\tSTATE_SUCCESS: \"success\",\n\n\tINVITE_STATUS_PENDING: \"pending\",\n\tINVITE_STATUS_ACCEPTED: \"accepted\",\n\n\tvalidation: {\n\t    firstName: {\n\t      \trequired: true,\n\t      \tminLength: 1,\n\t      \tmsg: \"Please enter a valid first name\"\n\t    },\n\t    lastName: {\n\t      \trequired: true,\n\t      \tminLength: 1,\n\t      \tmsg: \"Please enter a valid last name\"\n\t    },\n\t    email: {\n\t    \tpattern: \"email\",\n\t    \trequired: true,\n\t      \tminLength: 1,\n\t      \tmsg: \"Please enter a valid email\"\n\t    }\n\t},\n\n\tdefaults: {\n\t    email: null,\n\t    firstName: null,\n\t    lastName: null,\n\t    state: DEFAULT_STATE\n\t},\n\n\turlRoot: function() {\n        return ApiConstants.PATH_PREFIX + \"/\" + this.getCompany() + \"/invite\";\n    },\n\n\tinitialize: function() {\n\t\tthis.on(\"request\",this.onStartSending,this);\n\t\tthis.on(\"sync\",this.onSyncSuccess,this);\n\t\tthis.on(\"error\",this.onSyncError,this);\n\t\tthis.on(\"change:email\",this.onChange,this);\n\t\tthis.on(\"change:firstName\",this.onChange,this);\n\t\tthis.on(\"change:lastName\",this.onChange,this);\n\t},\n\n\tonChange: function() {\n\t\tthis.set(\"state\", this.STATE_IDLE);\n\t},\n\n\tonStartSending: function() {\n\t\tthis.set(\"state\", this.STATE_SENDING);\n\t},\n\n\tonSyncSuccess: function() {\n\t\tthis.set(\"state\", this.STATE_SUCCESS);\n\t},\n\n\tonSyncError: function() {\n\t\tthis.set(\"state\", this.STATE_ERROR);\n\t},\n\n    save: function(attrs, options) {\n        options = options || {};\n\n        attrs = attrs || _.clone(this.attributes);\n\n        // Filter the data to send to the server\n        delete attrs.state;\n        delete attrs.error;\n\n        // Proxy the call to the original save function\n        return Backbone.Model.prototype.save.call(this, attrs, options);\n    },\n\n    fetchByToken: function(token) {\n        var options = {\n            url: _.result(this, \"urlRoot\") + \"/\" + token\n        };\n\n        return this.fetch(options);\n    }\n});\n\n\n},{\"backbone\":\"backbone\",\"backbone-validation\":3,\"constants/ApiConstants\":15,\"models/BaseModel\":19,\"underscore\":\"underscore\",\"utils/CompanyMixin\":30}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\nvar validation = require(\"backbone-validation\");\n\nvar ApiConstants = require(\"constants/ApiConstants\");\nvar Backbone = require(\"backbone\");\nvar ExtendedModel = require(\"utils/ExtendedModel\");\nvar UserEvent = require(\"events/UserEvent\");\n\nvar DEFAULT_STATE = \"idle\";\n\nvar UserModel = ExtendedModel.extend({\n    mixins: [\n        validation.mixin\n    ],\n\n    urlRoot: ApiConstants.PATH_PREFIX + \"/account\",\n\n    STATE_IDLE: \"idle\",\n    STATE_SENDING: \"sending\",\n    STATE_ERROR: \"error\",\n    STATE_SUCCESS: \"success\",\n\n    validation: {\n        firstName: {\n            required: false,\n            maxLength: 255,\n            msg: \"Please make first name less than 255 characters\"\n        },\n        lastName: {\n            required: false,\n            maxLength: 255,\n            msg: \"Please make last name less than 255 characters\"\n        },\n        companyName: {\n            required: false,\n            maxLength: 255,\n            msg: \"Please make company name less than 255 characters\"\n        },\n        displayName: {\n            required: false,\n            maxLength: 50,\n            msg: \"Please make display name less than 50 characters\"\n        },\n        email: {\n            pattern: \"email\",\n            required: true,\n            msg: \"Please enter a valid email\"\n        },\n        password: {\n            required: false,\n            minLength: 8,\n            msg: \"Please enter a password with at least 8 characters\"\n        }\n    },\n\n    defaults: {\n        email: null,\n        firstName: null,\n        lastName: null,\n        displayName: null,\n        state: DEFAULT_STATE\n    },\n\n    initialize: function() {\n        ExtendedModel.prototype.initialize.apply(this);\n\n        this.on(\"request\",this.onStartSending,this);\n        this.on(\"sync\",this.onSyncSuccess,this);\n        this.on(\"error\",this.onSyncError,this);\n        this.on(\"change:email\",this.onChange,this);\n        this.on(\"change:firstName\",this.onChange,this);\n        this.on(\"change:lastName\",this.onChange,this);\n        this.on(\"change:password\",this.onChange,this);\n\n        this.on(\"change\", this.triggerUserChangeEvent);\n    },\n\n    onChange: function() {\n        this.set(\"state\", this.STATE_IDLE);\n    },\n\n    onStartSending: function() {\n        this.set(\"state\", this.STATE_SENDING);\n    },\n\n    onSyncSuccess: function() {\n        this.set(\"state\", this.STATE_SUCCESS);\n    },\n\n    onSyncError: function() {\n        this.set(\"state\", this.STATE_ERROR);\n    },\n\n    save: function(attrs, options) {\n        options = options || {};\n\n        attrs = attrs || _.clone(this.attributes);\n\n        // Filter the data to send to the server\n        delete attrs.state;\n        delete attrs.error;\n\n        options.attrs = options.attrs || _.clone(attrs);\n\n        delete attrs.password;\n        delete attrs.companyToken;\n        delete attrs.inviteToken;\n        delete attrs.signin;\n\n        // Proxy the call to the original save function\n        return ExtendedModel.prototype.save.call(this, attrs, options);\n    },\n\n    saveProfile: function(attrs, options) {\n        options = options || {};\n\n        attrs = attrs || _.clone(this.attributes);\n        attrs = _.pick(attrs, \"firstName\", \"lastName\", \"companyName\", \"displayName\");\n\n        options.attrs = _.clone(attrs);\n        options.patch = true;\n        options.url = ApiConstants.PATH_PREFIX + \"/me\";\n        options.wait = true;\n\n        delete attrs.companyName;\n\n        return this.save(attrs, options);\n    },\n\n    saveEmail: function(attrs, options) {\n        options = options || {};\n\n        attrs = attrs || _.clone(this.attributes);\n        attrs = _.pick(attrs, \"email\", \"currentPassword\");\n\n        options.attrs = _.clone(attrs);\n        options.patch = true;\n        options.url = ApiConstants.PATH_PREFIX + \"/me\";\n        options.wait = true;\n\n        delete attrs.currentPassword;\n\n        return this.save(attrs, options);\n    },\n\n    savePassword: function(attrs, options) {\n        options = options || {};\n\n        attrs = attrs || _.clone(this.attributes);\n        attrs = _.pick(attrs, \"password\", \"currentPassword\");\n\n        options.attrs = attrs;\n        options.patch = true;\n        options.url = ApiConstants.PATH_PREFIX + \"/me\";\n\n        return this.save(undefined, options);\n    },\n\n    init: function() {\n        var options = {\n            data: { init: true },\n            url: ApiConstants.PATH_PREFIX + \"/me\"\n        };\n\n        return this.fetch(options).then(function(user) {\n\n            var company = user.getCurrentCompany();\n            if (!company) {\n                return Promise.reject(new Error(\"User is not linked to a company\"));\n            }\n\n            var userEvent = new UserEvent({\n                company: company\n            });\n\n            Backbone.trigger(UserEvent.EVENT_LOAD_DATA, userEvent);\n\n            delete company.data;\n\n            return user;\n        });\n    },\n\n    getFullName: function() {\n        if(!(this.get(\"firstName\")) && !(this.get(\"lastName\"))) {\n            return this.get(\"email\");\n        }\n\n        return ((this.get(\"firstName\") || \"\") + \" \" + (this.get(\"lastName\") || \"\")).trim();\n    },\n\n    getDisplayName: function() {\n        if (this.get(\"displayName\")) {\n            return this.get(\"displayName\");\n        }\n        else if (this.get(\"firstName\")) {\n            return this.get(\"firstName\");\n        }\n\n        return this.get(\"email\").substring(0, this.get(\"email\").indexOf(\"@\"));\n    },\n\n    getCurrentCompany: function() {\n        var companies = this.get(\"companies\");\n        if(!companies || !companies.length) {\n            return;\n        }\n\n        return companies[0];\n    },\n\n    login: function() {\n        var company = this.getCurrentCompany();\n        var userEvent = new UserEvent({\n            fullName: this.getFullName(),\n            email: this.get(\"email\"),\n            companyName: company ? company.name : null,\n            companyId: company ? company.token : null\n        });\n\n        Backbone.trigger(UserEvent.EVENT_LOG_IN, userEvent);\n    },\n\n    logout: function() {\n        Backbone.trigger(UserEvent.EVENT_LOG_OUT);\n        window.location.href = \"/user/signout\";\n    },\n\n    triggerUserChangeEvent: function() {\n        var company = this.getCurrentCompany();\n\n        Backbone.trigger(UserEvent.EVENT_CHANGE, new UserEvent({\n            fullName: this.getFullName(),\n            email: this.get(\"email\"),\n            company: company ? company.name : null,\n            companyId: company ? company.token : null\n        }));\n    }\n});\n\nmodule.exports = UserModel;\n\n\n},{\"backbone\":\"backbone\",\"backbone-validation\":3,\"constants/ApiConstants\":15,\"events/UserEvent\":18,\"underscore\":\"underscore\",\"utils/ExtendedModel\":31}],24:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\nvar Router = require(\"react-router\");\nvar Route = Router.Route;\nvar DefaultRoute = Router.DefaultRoute;\nvar NotFoundRoute = Router.NotFoundRoute;\nvar RouteHandler = Router.RouteHandler;\n\nvar InviteManager = require(\"screens/InviteManager.jsx\");\nvar InviteAccept = require(\"screens/InviteAccept.jsx\");\nvar InviteConfirm = require(\"screens/InviteConfirm.jsx\");\nvar NavigationError = require(\"screens/NavigationError.jsx\");\n\nvar App = React.createClass({displayName: \"App\",\n    render: function() {\n        return (\n            React.createElement(RouteHandler, null)\n        );\n    }\n});\n\nvar routes = (\n\tReact.createElement(Route, {name: \"app\", path: \"/\", handler: App}, \n        React.createElement(Route, {name: \"error\", path: \"error/:code\", handler: NavigationError}), \n\t    React.createElement(Route, {handler: InviteManager}, \n\t        React.createElement(Route, {name: \"confirm\", path: \":companyToken/?:inviteToken?/confirm\", handler: InviteConfirm}), \n\t        React.createElement(Route, {name: \"accept\", path: \":companyToken/?:inviteToken?\", handler: InviteAccept})\n\t    ), \n\t    React.createElement(NotFoundRoute, {handler: NavigationError})\n\t)\n);\n\nvar InviteRouter = Router.create({\n    routes: routes,\n});\n\nmodule.exports = InviteRouter;\n\n\n},{\"react\":\"react\",\"react-router\":\"react-router\",\"screens/InviteAccept.jsx\":25,\"screens/InviteConfirm.jsx\":26,\"screens/InviteManager.jsx\":27,\"screens/NavigationError.jsx\":28}],25:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\nvar Navigation = require(\"react-router\").Navigation;\nvar validator = require(\"validator\");\nvar _ = require(\"underscore\");\nvar backboneMixin = require(\"backbone-react-component\");\n\nvar cx = require(\"react/lib/cx\");\n\nvar ValidatedInput = require(\"components/forms/ValidatedInput.jsx\");\n\nvar InviteAccept = React.createClass({displayName: \"InviteAccept\",\n    mixins: [backboneMixin, Navigation],\n\n    propTypes: {\n        company: React.PropTypes.object,\n        invite: React.PropTypes.object\n    },\n\n    getInitialState: function() {\n        return {\n            errors: {}\n        };\n    },\n\n    render: function() {\n        var emailIcon = React.createElement(\"span\", {className: \"glyphicon glyphicon-envelope\", \"aria-hidden\": \"true\"});\n        var firstNameIcon = React.createElement(\"span\", {className: \"glyphicon glyphicon-user\", \"aria-hidden\": \"true\"});\n        var passwordIcon = React.createElement(\"span\", {className: \"glyphicon glyphicon-lock\", \"aria-hidden\": \"true\"});\n\n        return (\n            React.createElement(\"div\", {className: \"invite-accept\"}, \n                React.createElement(\"div\", {className: \"panel panel-default\"}, \n                    React.createElement(\"div\", {className: \"row\"}, \n                        React.createElement(\"div\", {className: \"col-xs-12 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2\"}, \n                            React.createElement(\"div\", {className: \"panel-header text-center\"}, \n                                this.renderTitle(), \n                                React.createElement(\"div\", {className: \"subtitle\"}, \"Learn to stop worrying and love the BoM\")\n                            ), \n                            React.createElement(\"div\", {className: \"panel-body\"}, \n                                React.createElement(\"div\", {className: \"form-container text-left\"}, \n                                    React.createElement(\"form\", {onSubmit: this.onFormSubmit}, \n                                        React.createElement(ValidatedInput, {\n                                            ref: \"email\", \n                                            name: \"email\", \n                                            value: this.props.invite ? this.props.invite.get(\"email\") : null, \n                                            icon: emailIcon, \n                                            onChange: this.onChange, \n                                            placeholder: \"Email\", \n                                            type: \"email\", \n                                            errorLabel: this.state.errors.email, \n                                            displayFeedback: true, \n                                            autoComplete: \"username\", \n                                            autoFocus: true}\n                                        ), \n                                        React.createElement(\"div\", {className: \"row\"}, \n                                            React.createElement(\"div\", {className: \"col-xs-12 col-md-6\"}, \n                                                React.createElement(ValidatedInput, {\n                                                    ref: \"firstName\", \n                                                    name: \"firstName\", \n                                                    value: this.props.invite ? this.props.invite.get(\"firstName\") : null, \n                                                    icon: firstNameIcon, \n                                                    onChange: this.onChange, \n                                                    placeholder: \"First Name\", \n                                                    type: \"text\", \n                                                    errorLabel: this.state.errors.firstName, \n                                                    displayFeedback: true, \n                                                    autoComplete: \"firstname\"}\n                                                )\n                                            ), \n                                            React.createElement(\"div\", {className: \"col-xs-12 col-md-6\"}, \n                                                React.createElement(ValidatedInput, {\n                                                    ref: \"lastName\", \n                                                    name: \"lastName\", \n                                                    value: this.props.invite ? this.props.invite.get(\"lastName\") : null, \n                                                    onChange: this.onChange, \n                                                    placeholder: \"Last Name\", \n                                                    type: \"text\", \n                                                    errorLabel: this.state.errors.lastName, \n                                                    displayFeedback: true, \n                                                    autoComplete: \"lastname\"}\n                                                )\n                                            )\n                                        ), \n                                        React.createElement(\"div\", {className: \"row\"}, \n                                            React.createElement(\"div\", {className: \"col-md-12\"}, \n                                                React.createElement(ValidatedInput, {\n                                                    ref: \"password\", \n                                                    name: \"password\", \n                                                    icon: passwordIcon, \n                                                    onChange: this.onChange, \n                                                    placeholder: \"Password\", \n                                                    type: \"password\", \n                                                    errorLabel: this.state.errors.password, \n                                                    displayFeedback: true}\n                                                )\n                                            )\n                                        ), \n                                        React.createElement(\"div\", {className: \"row\"}, \n                                            React.createElement(\"div\", {className: \"col-md-12\"}, \n                                                \"By clicking send, I agree to the \", React.createElement(\"a\", {target: \"_blank\", href: \"http://bomsquad.io/policies/terms-of-service/\"}, \"Terms of Service\"), \" and the \", React.createElement(\"a\", {target: \"_blank\", href: \"http://bomsquad.io/policies/privacy-policy/\"}, \"Privacy Policy\"), \".\"\n                                            )\n                                        ), \n                                        React.createElement(\"div\", {className: \"row\"}, \n                                            React.createElement(\"div\", {className: \"col-md-12\"}, \n                                                React.createElement(\"div\", {className: \"form-group\"}, \n                                                    React.createElement(\"button\", {\n                                                        type: \"submit\", \n                                                        className: cx({\n                                                            \"btn\": true,\n                                                            \"btn-primary\": true,\n                                                            \"btn-lg\": true,\n                                                            \"disabled\": !_.isEmpty(this.state.errors) || (this.props.invite && this.props.invite.get(\"status\") === this.props.invite.INVITE_STATUS_ACCEPTED)\n                                                        }), \n                                                        disabled: !_.isEmpty(this.state.errors) || (this.props.invite && this.props.invite.get(\"status\") === this.props.invite.INVITE_STATUS_ACCEPTED), \n                                                        value: \"submit\"}, this.renderButtonText())\n                                                )\n                                            )\n                                        ), \n                                        this.renderStatusFeedback()\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        );\n    },\n\n    renderTitle: function() {\n        var title = \"Create an account\";\n        var companyName;\n\n        if (this.props.company && this.props.company.get(\"name\")) {\n            companyName = this.props.company.get(\"name\");\n        }\n        else if (this.props.invite && this.props.invite.get(\"companyName\")) {\n            companyName = this.props.invite.get(\"companyName\");\n        }\n\n        if (companyName) {\n            title += \" and join \" + companyName.replace(/ /g, \"\\u00a0\");\n        }\n\n        return React.createElement(\"div\", {className: \"title\"}, title);\n    },\n\n    renderStatusFeedback: function() {\n        var message;\n\n        if (this.props.invite && this.props.invite.get(\"status\") === this.props.invite.INVITE_STATUS_ACCEPTED) {\n            message = \"This invite has been used.\"\n        }\n        else if (this.getModel().get(\"state\") === this.getModel().STATE_IDLE ||\n            this.getModel().get(\"state\") === this.getModel().STATE_SENDING) {\n            return null;\n        }\n        else {\n            message =\n                (this.getModel().get(\"state\") === this.getModel().STATE_SUCCESS) ?\n                \"Your account has been created!\" :\n                \"A problem occurred while sending. Please try again.\";\n        }\n\n        return (\n            React.createElement(\"div\", {className: cx({\n                    \"alert\": true,\n                    \"alert-danger\": (this.getModel().get(\"state\") === this.getModel().STATE_ERROR),\n                    \"alert-success\": (this.getModel().get(\"state\") === this.getModel().STATE_SUCCESS),\n                    \"alert-dismissable\": true\n                })}, \n                message\n            ));\n    },\n\n    renderButtonText: function(){\n        if(this.getModel().get(\"state\") === this.getModel().STATE_SENDING) {\n            return (\n                React.createElement(\"div\", {className: \"spinner\"}, \n                    React.createElement(\"div\", {className: \"bounce1\"}), \n                    React.createElement(\"div\", {className: \"bounce2\"}), \n                    React.createElement(\"div\", {className: \"bounce3\"})\n                )\n            );\n        } else {\n            return \"Send\";\n        }\n    },\n\n    onChange: function(event) {\n        var value = {}\n        var errors;\n        var allErrors = _.clone(this.state.errors);\n\n        value[event.target.name] = event.target.value;\n        errors = this.getModel().preValidate(value) || {};\n\n        if (event.target.name === \"password\" && !event.target.value) {\n            errors = _.extend(errors, { password: \"Please enter a password with at least 8 characters\"});\n        }\n\n        if (!errors[event.target.name]) {\n            allErrors = _.omit(allErrors, event.target.name);\n        }\n\n        errors = _.extend(allErrors, errors);\n\n        this.setState({errors: allErrors});\n    },\n\n    onFormSubmit: function(event) {\n        var errors = {};\n        var attrs;\n\n        event.preventDefault();\n\n        if (!this.refs.password.state.value) {\n            errors = _.extend(errors, { password: \"Please enter a password with at least 8 characters\"});\n        }\n\n        if (!_.isEmpty(errors)) {\n            this.setState({\n                errors: errors\n            });\n            return;\n        }\n\n        attrs = {\n            email: this.refs.email.state.value,\n            firstName: this.refs.firstName.state.value,\n            lastName: this.refs.lastName.state.value,\n            password: this.refs.password.state.value,\n            companyToken: this.props.company ? this.props.company.get(\"token\") : this.props.params.companyToken,\n            inviteToken: this.props.invite ? this.props.invite.get(\"token\") : this.props.params.inviteToken,\n            signin: true\n        };\n\n        this.getModel().save(attrs).then(function(user) {\n            this.transitionTo(\"confirm\", this.props.params);\n        }.bind(this), function(error) {\n            console.log(error);\n            this.setState({\"errors\": error.getValidationErrors()});\n        }.bind(this));\n    }\n});\n\nmodule.exports = InviteAccept;\n\n\n},{\"backbone-react-component\":2,\"components/forms/ValidatedInput.jsx\":14,\"react\":\"react\",\"react-router\":\"react-router\",\"react/lib/cx\":8,\"underscore\":\"underscore\",\"validator\":\"validator\"}],26:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\nvar Navigation = require(\"react-router\").Navigation;\n\nvar InviteConfirm = React.createClass({displayName: \"InviteConfirm\",\n    mixins: [Navigation],\n\n    componentDidMount: function() {\n        setTimeout(function() {\n            window.location.href = \"/\";\n        }, 3000);\n    },\n\n    render: function() {\n        return (\n            React.createElement(\"div\", {className: \"invite-confirm text-center\"}, \n                React.createElement(\"div\", {className: \"panel panel-default\"}, \n                    React.createElement(\"div\", {className: \"panel-header\"}, \n                        React.createElement(\"div\", {className: \"title\"}, \"Welcome!\"), \n                        React.createElement(\"div\", {className: \"subtitle\"}, \"You are now signed up for BoM Squad.\", React.createElement(\"br\", null), \"You will shortly be redirected.\")\n                    ), \n                    React.createElement(\"div\", {className: \"panel-body\"}, \n                        React.createElement(\"a\", {href: \"/\"}, \"If you are not redirected, please click this link.\")\n                    )\n                )\n            )\n        );\n    }\n});\n\nmodule.exports = InviteConfirm;\n\n\n},{\"react\":\"react\",\"react-router\":\"react-router\"}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\nvar React = require(\"react\");\nvar RouteHandler = require(\"react-router\").RouteHandler;\nvar Navigation = require(\"react-router\").Navigation;\n\nvar Footer = require(\"components/Footer.jsx\");\nvar SimpleHeader = require(\"components/SimpleHeader.jsx\");\nvar UserStore = require(\"stores/UserStore\");\nvar UserInviteModel = require(\"models/UserInviteModel\");\nvar CompanyModel = require(\"models/CompanyModel\");\n\nvar InviteManager = React.createClass({displayName: \"InviteManager\",\n    mixins: [Navigation],\n\n    getInitialState: function() {\n        return {\n            user: null,\n            company: null,\n            invite: null\n        };\n    },\n\n    componentWillMount: function() {\n        if (this.props.params.inviteToken) {\n            this.fetchInvite(this.props.params.inviteToken)\n        }\n        else if (this.props.params.companyToken) {\n            this.fetchCompany(this.props.params.companyToken);\n        }\n        else {\n            this.transitionTo(\"error\", {\"code\": 404});\n        }\n    },\n\n    fetchCompany: function(token) {\n        var company = new CompanyModel();\n\n        company.fetchByToken(token).then(function(company) {\n\n            this.setState({\n                user: UserStore,\n                company: company\n            });\n\n        }.bind(this), function(error) {\n            this.transitionTo(\"error\", {\"code\": 404});\n        }.bind(this));\n    },\n\n    fetchInvite: function(token) {\n        var invite = new UserInviteModel();\n        invite.setCompany(this.props.params.companyToken);\n\n        invite.fetchByToken(token).then(function(/* invite */) {\n\n            this.setState({\n                user: UserStore,\n                invite: invite\n            });\n\n        }.bind(this), function(error) {\n            this.transitionTo(\"error\", {\"code\": 404});\n        }.bind(this));\n    },\n\n    render: function() {\n        if (!this.state.user) {\n            return null;\n        }\n\n        return (\n            React.createElement(\"div\", {className: \"container-fluid dark-background\"}, \n                React.createElement(SimpleHeader, null), \n                React.createElement(\"div\", {className: \"row\"}, \n                    React.createElement(\"div\", {className: \"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\"}, \n                        React.createElement(RouteHandler, {\n                            params: this.props.params, \n                            model: this.state.user, \n                            company: this.state.company, \n                            invite: this.state.invite})\n                    )\n                ), \n                React.createElement(Footer, null)\n            ));\n    }\n});\n\nmodule.exports = InviteManager;\n\n\n},{\"components/Footer.jsx\":11,\"components/SimpleHeader.jsx\":12,\"models/CompanyModel\":20,\"models/UserInviteModel\":22,\"react\":\"react\",\"react-router\":\"react-router\",\"stores/UserStore\":29,\"underscore\":\"underscore\"}],28:[function(require,module,exports){\n\"use strict\";\n\nvar React = require(\"react\");\nvar State = require(\"react-router\").State;\n\nvar SimplePage = require(\"components/SimplePage.jsx\");\n\nvar NavigationErrorModel = require(\"models/NavigationErrorModel\");\n\nmodule.exports = React.createClass({displayName: \"exports\",\n    mixins: [State],\n\n    propTypes: {\n        statusCode: React.PropTypes.string\n    },\n\n    render: function() {\n        var match = /\\/error\\/(\\d+)/.exec(this.getPath());\n        var statusCode = match && match.length > 1 ? match[1] : 404;\n        var model = new NavigationErrorModel({statusCode: statusCode});\n\n        return (\n            React.createElement(SimplePage, null, \n                React.createElement(\"div\", {className: \"panel panel-default\"}, \n                    React.createElement(\"div\", {className: \"panel-body text-center\"}, \n                        React.createElement(\"h1\", null, model.getTitle()), \n                        React.createElement(\"div\", null, \n                            React.createElement(\"span\", {className: \"fa fa-exclamation-triangle font-12x text-warning\", \"aria-hidden\": \"true\"})\n                        ), \n                        React.createElement(\"h4\", null, \n                            model.description\n                        ), \n                        React.createElement(\"h5\", null, \n                            React.createElement(\"a\", {href: \"/\"}, \"Go back to main page\")\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n});\n\n\n},{\"components/SimplePage.jsx\":13,\"models/NavigationErrorModel\":21,\"react\":\"react\",\"react-router\":\"react-router\"}],29:[function(require,module,exports){\n\"use strict\";\n\nvar UserModel = require(\"models/UserModel\");\nmodule.exports = new UserModel();\n\n\n},{\"models/UserModel\":23}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\n\nvar CompanyMixin = {\n\n    companyId: null,\n\n    getCompany: function() {\n        if(!this.companyId && _.has(this,\"collection\")) {\n            //Attempt to delegate to collection\n            return this.collection.getCompany();\n        }\n        return this.companyId;\n    },\n\n    setCompany: function(companyId) {\n        this.companyId = companyId;\n    },\n\n    isCompanySet: function(){\n        return !!(this.companyId);\n    },\n\n    setChildrenCompany: function() {\n        this.each(function(child) {\n            if(child && child.setCompany){\n                child.setCompany(this.companyId);\n            }\n        }.bind(this));\n    }\n\n};\n\nmodule.exports = CompanyMixin;\n\n\n},{\"underscore\":\"underscore\"}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"underscore\");\nvar ApiError = require(\"errors/ApiError\");\nvar Backbone = require(\"backbone\");\n\nvar ExtendedModel = Backbone.Model.extend({\n    _syncing: false,\n    _dirty: false,\n    _associations: undefined,\n\n    is: function(model) {\n        return ((model.id && (this.id === model.id)) ||\n                (model.cid && (this.cid === model.cid)));\n    },\n\n    initialize: function() {\n        this.listenTo(this, \"change\", this._onChange);\n        this.listenTo(this, \"request\", this._onRequest);\n        this.listenTo(this, \"sync\", this._onSync);\n        this.listenTo(this, \"error\", this._onError);\n    },\n\n    _onChange: function() {\n        this._dirty = true;\n    },\n\n    _onRequest: function() {\n        this._syncing = true;\n    },\n\n    _onSync: function() {\n        this._dirty = false;\n        this._syncing = false;\n    },\n\n    _onError: function() {\n        this._syncing = false;\n    },\n\n    isDirty: function() {\n        return this._dirty;\n    },\n\n    isSyncing: function() {\n        return this._syncing;\n    },\n\n    getAssociations: function() {\n        return this._associations;\n    },\n\n    getAssociation: function(association) {\n        return this._associations ? this._associations[association] : undefined;\n    },\n\n    setAssociation: function(key, value) {\n        this._associations = this._associations || {};\n        this._associations[key] = value;\n    },\n\n    sync: function(method, model, options) {\n        return new Promise(function(resolve, reject) {\n            var success;\n            var error;\n\n            success = options.success;\n            options.success = function(response) {\n                if (success) {\n                    success(response);\n                }\n                resolve(model);\n            };\n\n            error = options.error;\n            options.error = function(xhr, textStatus, errorThrown) {\n                if (error) {\n                    error.apply(this, arguments);\n                }\n                reject(new ApiError({\n                  xhr: xhr,\n                  textStatus: textStatus,\n                  errorThrown: errorThrown\n                }));\n            };\n\n            Backbone.sync(method, model, options);\n        });\n    },\n\n    fetch: function fetch() {\n        var xhr = Backbone.Model.prototype.fetch.apply(this, arguments);\n        return (xhr !== false) ? xhr : Promise.reject(new Error(\"Invalid model attributes.\"));\n    },\n\n    save: function save() {\n        var xhr = Backbone.Model.prototype.save.apply(this, arguments);\n        return (xhr !== false) ? xhr : Promise.reject(new Error(\"Invalid model attributes.\"));\n    },\n\n    destroy: function destroy(options) {\n        options = options ? options : {};\n\n        // dirty hack around Backbone setting dataType: \"json\" for every requests\n        if (!options.dataType) {\n            options.dataType = \"html\";\n        }\n\n        var xhr = Backbone.Model.prototype.destroy.apply(this, [options]);\n        return (xhr !== false) ? xhr : Promise.reject(new Error(\"Can't destroy new model\"));\n    },\n\n    toJSON: function(options) {\n        var json;\n\n        options = options || {};\n\n        if (_.isEmpty(options) || !options.json) {\n            return _.clone(this.attributes);\n        }\n\n        options.json.associations = options.json.associations || [];\n\n        json = {};\n\n        // Check if we need to include the client id\n        if (options.json.cid) {\n            json = _.extend(json, { cid: this.cid });\n        }\n\n        if (_.isArray(options.json.attributes)) {\n            _.each(options.json.attributes, function(attribute) {\n                json[attribute] = this.get(attribute);\n            }, this);\n        }\n        else if (options.json.attributes !== false) {\n            json = _.extend(json, _.clone(this.attributes));\n        }\n\n        // If the model doesn't have any associations, then stop here\n        if (_.isEmpty(this._associations)) {\n            return json;\n        }\n\n        if (options.json.associations === true) {\n            _.each(this._associations, function(association, key) {\n                var newOptions;\n\n                if (this._associations.hasOwnProperty(key)) {\n                    if (!association || association.length === 0) { return; }\n\n                    newOptions = _.omit(options, \"json\"); // watch out, not deep clone\n                    newOptions.json = {\n                        attributes: true,\n                        associations: true\n                    };\n\n                    json[key] = association.map(function(model) {\n                        return model.toJSON(newOptions);\n                    });\n                }\n            }, this);\n        }\n        else if (_.isObject(options.json.associations)) {\n            _.each(options.json.associations, function(value, key) {\n                var association;\n                var newOptions = _.omit(options, \"json\"); // watch out, not deep clone;\n                newOptions.json = value === true ? { associations: true } : _.clone(value);\n\n                association = this.getAssociation(key);\n                if (!association || association.length === 0) { return; }\n\n                json[key] = association.map(function(model) {\n                    return model.toJSON(newOptions);\n                });\n            }, this);\n        }\n\n        return json;\n    }\n});\n\nmodule.exports = ExtendedModel;\n\n\n},{\"backbone\":\"backbone\",\"errors/ApiError\":17,\"underscore\":\"underscore\"}]},{},[1]);\n"],"file":"invite.js","sourceRoot":"/source/"}